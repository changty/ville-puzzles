{"version":3,"sources":["puzzles/BasePuzzle.js","lib/util.js","puzzles/Puzzle1.js"],"names":["defaultOptions","BasePuzzle","options","Object","assign","state","answer","answerSent","elementSelectors","parent","callback","window","alert","completeAnswer","JSON","stringify","setting","console","log","setState","parentEl","document","querySelector","renderHTML","el","inner","HTMLElement","Text","appendChild","Array","forEach","renderInner","i","innerText","type","id","newEl","createElement","oldEl","parentNode","removeChild","innerHTML","renderElement","newState","oldState","updateView","randomChoice","capitalize","setVendorStyle","indexToRowCol","rowColToIndex","arr","Math","floor","random","length","str","charAt","toUpperCase","substr","element","property","value","prop","style","numOfCols","idx","col","row","Puzzle1","cipherer","Cipherer","characterSet","key","answerCheck","currentCharIdx","ringRotation","selectedCharIdx","submitted","setup","onkeydown","onKeyPress","bind","canSubmit","cipherText","checkMessage","canSend","sendAnswer","canErase","slice","canSelect","e","onPrev","onNext","onSelect","onErase","preventDefault","updateAnswer","updateButtons","updateQuestion","updateRing","rotation","getRingRotation","setTimeout","querySelectorAll","c","classList","add","remove","renderQuestion","renderAnswer","eraseButton","disabled","selectButton","submitButton","sendAnswerButton","renderDescription","renderCipherRing","onclick","onSubmit","onSendAnswer","keyExample","createTextNode","labelText","label","chars","split","map","questionEl","answerText","radius","ring","ringWrapper","prevButton","nextButton","controls","index","keys","exec","factor","parseInt","indexOf","m","cipherChar","join","charToCheck","message","checkCharacter"],"mappings":"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","file":"Puzzle1.27b1de0c.map","sourceRoot":"../src","sourcesContent":["const defaultOptions = {\n  \"str-answer-label\": \"Vastauksesi:\",\n  \"str-check-answer\": \"Tarkista\",\n  \"str-send-answer\": \"Lähetä\",\n  \"str-answer-sent\": \"Vastaus lähetetty!\",\n  \"str-select\": \"Valitse\",\n  \"str-erase\": \"Poista\"\n};\n\nexport class BasePuzzle {\n  /**\n   * @param {object} options\n   */\n\n  constructor(options = {}) {\n    this.options = Object.assign(defaultOptions, options);\n\n    this.state = {\n      answer: \"\",\n      answerSent: false\n    };\n\n    this.elementSelectors = Object.assign(\n      {\n        parent: \"#puzzle\"\n      },\n      this.options.elementSelectors\n    );\n  }\n\n  onSubmit() {}\n\n  sendAnswer(callback) {\n    window.alert(this.options[\"str-answer-sent\"]);\n\n    // TODO: Actually send \"completeAnswer\" to server\n    const completeAnswer = JSON.stringify({\n      setting: this.setting,\n      options: this.options,\n      answer: this.state.answer\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(\"Complete answer:\", completeAnswer);\n\n    this.setState({ answerSent: true }, callback);\n  }\n\n  setup() {\n    this.parentEl = document.querySelector(this.elementSelectors.parent);\n    this.renderHTML();\n  }\n\n  renderInner(el, inner) {\n    if (inner instanceof HTMLElement || inner instanceof Text) {\n      el.appendChild(inner);\n    } else if (inner instanceof Array) {\n      inner.forEach(i => {\n        this.renderInner(el, i);\n      });\n    } else {\n      el.innerText = inner || \"\";\n    }\n  }\n\n  renderElement(type, id, inner, parent = this.parentEl) {\n    const newEl = document.createElement(type);\n    newEl.id = id;\n\n    this.renderInner(newEl, inner);\n\n    const oldEl = document.querySelector(`#${id}`);\n    if (oldEl) oldEl.parentNode.removeChild(oldEl);\n\n    if (parent) {\n      parent.appendChild(newEl);\n    }\n\n    return newEl;\n  }\n\n  renderHTML() {\n    this.parentEl.innerHTML = \"\";\n    this.renderElement(\"h1\", \"puzzleName\", this.options[\"str-name\"]);\n  }\n\n  setState(newState, callback) {\n    const oldState = this.state;\n    this.state = Object.assign({}, oldState, newState);\n    if (typeof callback === \"function\") callback();\n    else this.updateView();\n  }\n\n  updateView() {}\n}\n","export function randomChoice(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\nexport function setVendorStyle(element, property, value) {\n  const prop = capitalize(property);\n  element.style[\"webkit\" + prop] = value;\n  element.style[\"moz\" + prop] = value;\n  element.style[\"ms\" + prop] = value;\n  element.style[\"o\" + prop] = value;\n}\n\nexport function indexToRowCol(numOfCols, idx) {\n  return {\n    col: Math.floor(idx % numOfCols),\n    row: Math.floor(idx / numOfCols)\n  };\n}\n\nexport function rowColToIndex(numOfCols, row, col) {\n  return row * numOfCols + col;\n}\n","import { BasePuzzle } from \"./BasePuzzle\";\nimport { setVendorStyle } from \"../lib/util\";\n\nimport \"./Puzzle1.css\";\n\nconst defaultOptions = {\n  \"str-name\": \"Salakirjoitus\",\n  \"str-description\":\n    \"Majavat lähettävät tietoa erityistä salakirjoitusavainta käyttäen.\",\n  \"str-key-descriptions\": {\n    \"+1\":\n      \"Jokainen kirjain vaihdetaan aakkosissa yksi askel eteenpäin olevaan kirjaimeen.\",\n    \"+2\":\n      \"Jokainen kirjain vaihdetaan aakkosissa kaksi askelta eteenpäin olevaan kirjaimeen.\",\n    \"-1\":\n      \"Jokainen kirjain vaihdetaan aakkosissa yksi askel taaksepäin olevaan kirjaimeen.\",\n    \"-2\":\n      \"Jokainen kirjain vaihdetaan aakkosissa kaksi askelta taaksepäin olevaan kirjaimeen.\"\n  },\n  \"str-example-label\": \"Siis esim..\",\n  \"str-ciphertext-label\": \"Vastaanotettu viesti:\",\n  \"str-question\": \"Mikä oli viesti?\"\n};\n\nexport class Puzzle1 extends BasePuzzle {\n  constructor(setting, options = {}) {\n    /**\n     * @param {object} setting\n     * @param {object} options\n     */\n    super(Object.assign(defaultOptions, options));\n\n    this.setting = setting;\n    this.cipherer = new Cipherer(this.setting.characterSet, this.setting.key);\n\n    this.state = Object.assign(this.state, {\n      answerCheck: [],\n      currentCharIdx: 0,\n      ringRotation: 0,\n      selectedCharIdx: 0,\n      submitted: false\n    });\n\n    this.setup();\n  }\n\n  setup() {\n    super.setup();\n    document.onkeydown = this.onKeyPress.bind(this);\n  }\n\n  cleanUp() {\n    document.onkeydown = null;\n  }\n\n  onSubmit() {\n    if (!this.canSubmit()) return;\n    const { answer } = this.state;\n    const { cipherText } = this.setting;\n    const answerCheck = this.cipherer.checkMessage(cipherText, answer);\n    this.setState({ answerCheck, submitted: true });\n  }\n\n  onSendAnswer() {\n    if (!this.canSend()) return;\n    this.sendAnswer();\n  }\n\n  onPrev() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation -= 1;\n\n    if (selectedCharIdx <= 0) {\n      selectedCharIdx = characterSet.length - 1;\n    } else {\n      selectedCharIdx -= 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onNext() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation += 1;\n\n    if (selectedCharIdx >= characterSet.length - 1) {\n      selectedCharIdx = 0;\n    } else {\n      selectedCharIdx += 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onErase() {\n    if (!this.canErase()) return;\n\n    let { answer, currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    answer = answer.slice(0, -1);\n    currentCharIdx -= 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx -= 1;\n      answer = answer.slice(0, -1);\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onSelect() {\n    if (!this.canSelect()) return;\n\n    const { selectedCharIdx } = this.state;\n    let { currentCharIdx, answer } = this.state;\n    const { characterSet, cipherText } = this.setting;\n\n    answer += characterSet[selectedCharIdx];\n    currentCharIdx += 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx += 1;\n      answer += \" \";\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onKeyPress(e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.onPrev();\n        break;\n\n      case \"ArrowRight\":\n        this.onNext();\n        break;\n\n      case \"Enter\":\n        this.onSelect();\n        break;\n\n      case \"Backspace\":\n        this.onErase();\n        break;\n\n      default:\n        return; // exit this handler for other keys\n    }\n\n    e.preventDefault(); // prevent the default action (scroll / move caret)\n  }\n\n  canSelect() {\n    const { answer, submitted } = this.state;\n    const { cipherText } = this.setting;\n\n    return !submitted && answer.length < cipherText.length;\n  }\n\n  canErase() {\n    const { answer, currentCharIdx, submitted } = this.state;\n    return !submitted && answer.length > 0 && currentCharIdx > 0;\n  }\n\n  canSubmit() {\n    const { answer, submitted } = this.state;\n    return !submitted && answer.length > 0;\n  }\n\n  canSend() {\n    const { answerSent, submitted } = this.state;\n    return submitted && !answerSent;\n  }\n\n  updateView() {\n    super.updateView();\n\n    this.updateAnswer();\n    this.updateButtons();\n    this.updateQuestion();\n    this.updateRing();\n  }\n\n  updateRing() {\n    const { ringRotation, selectedCharIdx } = this.state;\n    const rotation = this.getRingRotation(ringRotation);\n\n    // Update rotation\n    const el = document.querySelector(\"#puzzleRing #characters\");\n    setVendorStyle(el, \"transform\", `rotateY(${-rotation}deg)`);\n\n    // Update selected class\n    // Use setTimeout so the class is set somewhat in sync with the animation\n    setTimeout(() => {\n      document\n        .querySelectorAll(\"#puzzleRing #characters .characterSet\")\n        .forEach((c, idx) => {\n          if (idx === selectedCharIdx) c.classList.add(\"current-char\");\n          else c.classList.remove(\"current-char\");\n        });\n    }, 60);\n  }\n\n  updateQuestion() {\n    const el = document.querySelector(\"#puzzleQuestion\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderQuestion());\n  }\n\n  updateAnswer() {\n    const el = document.querySelector(\"#puzzleAnswer\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderAnswer());\n  }\n\n  updateButtons() {\n    this.eraseButton.disabled = !this.canErase();\n    this.selectButton.disabled = !this.canSelect();\n    this.submitButton.disabled = !this.canSubmit();\n    this.sendAnswerButton.disabled = !this.canSend();\n  }\n\n  renderHTML() {\n    super.renderHTML();\n\n    this.renderElement(\"p\", \"puzzleDescription\", this.renderDescription());\n    this.renderElement(\"p\", \"puzzleQuestion\", this.renderQuestion());\n    this.renderElement(\"div\", \"puzzleRing\", this.renderCipherRing());\n    this.renderElement(\"p\", \"puzzleAnswer\", this.renderAnswer());\n\n    // \"Tarkista\"-button\n    this.submitButton = this.renderElement(\n      \"button\",\n      \"puzzleSubmit\",\n      this.options[\"str-check-answer\"]\n    );\n    this.submitButton.onclick = this.onSubmit.bind(this);\n    this.submitButton.disabled = true;\n\n    // \"Lähetä\"-button\n    this.sendAnswerButton = this.renderElement(\n      \"button\",\n      \"puzzleSend\",\n      this.options[\"str-send-answer\"]\n    );\n    this.sendAnswerButton.onclick = this.onSendAnswer.bind(this);\n    this.sendAnswerButton.disabled = true;\n\n    this.updateView();\n  }\n\n  renderDescription() {\n    const { key, keyExample } = this.setting;\n    return [\n      document.createTextNode(this.options[\"str-description\"]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.options[\"str-key-descriptions\"][key]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.options[\"str-example-label\"]),\n      document.createTextNode(\" \"),\n      document.createTextNode(keyExample)\n    ];\n  }\n\n  renderQuestion() {\n    const { currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    const labelText = document.createTextNode(\n      this.options[\"str-ciphertext-label\"]\n    );\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = cipherText.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(\"cipher-char\");\n      if (idx === currentCharIdx) el.classList.add(\"current-char\");\n      el.innerText = c;\n      return el;\n    });\n\n    const questionEl = document.createElement(\"strong\");\n    questionEl.innerText = this.options[\"str-question\"];\n\n    return [label, chars, document.createElement(\"br\"), questionEl];\n  }\n\n  renderAnswer() {\n    const { answer, answerCheck, submitted } = this.state;\n\n    const labelText = document.createTextNode(this.options[\"str-answer-label\"]);\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = answer.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(answerCheck[idx] ? \"correct\" : \"incorrect\");\n      el.innerText = c;\n      return el;\n    });\n\n    const answerText = document.createTextNode(answer);\n\n    return submitted ? [label, chars] : [label, answerText];\n  }\n\n  renderCipherRing() {\n    const { characterSet } = this.setting;\n\n    const radius = 300;\n\n    const chars = characterSet.split(\"\").map((c, idx) => {\n      const rotation = this.getRingRotation(idx);\n      const el = document.createElement(\"li\");\n      el.classList.add(\"characterSet\");\n      el.innerText = c;\n      setVendorStyle(\n        el,\n        \"transform\",\n        `rotateY(${rotation}deg) translateZ(${radius}px)`\n      );\n      return el;\n    });\n\n    const ring = this.renderElement(\"ul\", \"characters\", chars, null);\n\n    const ringWrapper = this.renderElement(\"div\", \"ringWrapper\", ring, null);\n\n    const eraseButton = this.renderElement(\n      \"button\",\n      \"eraseButton\",\n      this.options[\"str-erase\"],\n      null\n    );\n    const prevButton = this.renderElement(\"button\", \"prevButton\", \"<<<\", null);\n    const nextButton = this.renderElement(\"button\", \"nextButton\", \">>>\", null);\n    const selectButton = this.renderElement(\n      \"button\",\n      \"selectButton\",\n      this.options[\"str-select\"],\n      null\n    );\n\n    eraseButton.disabled = true;\n\n    eraseButton.onclick = this.onErase.bind(this);\n    prevButton.onclick = this.onPrev.bind(this);\n    nextButton.onclick = this.onNext.bind(this);\n    selectButton.onclick = this.onSelect.bind(this);\n\n    const controls = this.renderElement(\"div\", \"controls\", [\n      eraseButton,\n      prevButton,\n      nextButton,\n      selectButton\n    ]);\n\n    this.eraseButton = eraseButton;\n    this.selectButton = selectButton;\n\n    return [ringWrapper, controls];\n  }\n\n  getRingRotation(index) {\n    return index * (360 / this.setting.characterSet.length);\n  }\n}\n\nexport class Cipherer {\n  constructor(characterSet, key) {\n    const keys = /([+-])(\\d+)/g.exec(key);\n    this.factor = keys[1] === \"-\" ? -parseInt(keys[2]) : parseInt(keys[2]);\n    this.characterSet = characterSet;\n  }\n\n  cipherChar(c) {\n    if (this.characterSet.indexOf(c) === -1) return c;\n    let idx = this.characterSet.indexOf(c) + this.factor;\n    if (idx < 0) idx += this.characterSet.length;\n    else if (idx > this.characterSet.length - 1)\n      idx -= this.characterSet.length;\n    return this.characterSet[idx];\n  }\n\n  cipherMessage(m) {\n    if (typeof m === \"string\") {\n      return m\n        .toUpperCase()\n        .split(\"\")\n        .map(this.cipherChar.bind(this))\n        .join(\"\");\n    }\n  }\n\n  checkCharacter(cipherChar, charToCheck) {\n    return (\n      cipherChar && charToCheck && cipherChar === this.cipherChar(charToCheck)\n    );\n  }\n\n  checkMessage(cipherText, message) {\n    return message\n      .toUpperCase()\n      .split(\"\")\n      .map((c, idx) => this.checkCharacter(cipherText[idx], c));\n  }\n}\n\nwindow.Puzzle1 = Puzzle1;\n"]}