{"version":3,"sources":["puzzles/BasePuzzle.js","lib/util.js","puzzles/Puzzle1.js"],"names":["BasePuzzle","data","JSON","parse","e","SyntaxError","console","log","setting","locale","state","answer","answerSent","callback","window","alert","general","completeAnswer","stringify","setState","parentEl","document","querySelector","renderHTML","el","inner","HTMLElement","Text","appendChild","Array","forEach","renderInner","i","innerText","type","id","parent","newEl","createElement","oldEl","parentNode","removeChild","innerHTML","renderElement","specific","newState","oldState","Object","assign","updateView","randomChoice","capitalize","setVendorStyle","indexToRowCol","rowColToIndex","arr","Math","floor","random","length","str","charAt","toUpperCase","substr","element","property","value","prop","style","numOfCols","idx","col","row","Puzzle1","cipherer","Cipherer","characterSet","key","factor","answerCheck","currentCharIdx","ringRotation","selectedCharIdx","submitted","setup","onkeydown","onKeyPress","bind","canSubmit","cipherText","checkMessage","canSend","sendAnswer","canErase","slice","canSelect","onPrev","onNext","onSelect","onErase","preventDefault","updateAnswer","updateButtons","updateQuestion","updateRing","rotation","getRingRotation","setTimeout","querySelectorAll","c","classList","add","remove","renderQuestion","renderAnswer","eraseButton","disabled","selectButton","submitButton","sendAnswerButton","renderDescription","renderCipherRing","onclick","onSubmit","onSendAnswer","createTextNode","renderExample","labelText","label","chars","split","map","questionEl","cs","len","rotatingIndex","join","answerText","radius","ring","ringWrapper","prevButton","nextButton","controls","index","keys","exec","parseInt","indexOf","m","cipherChar","charToCheck","message","checkCharacter","arrayLen"],"mappings":";;;;;;;;QCAgBkD,eAAAA;QAIAC,aAAAA;QAIAC,iBAAAA;IDRHpD,ICgBGqD,gBAAAA,CDhBHrD;AACX,QCsBcsD,gBAAAA;AAvBT,SAASJ,YAAT,CAAsBK,GAAtB,EAA2B;AAChC,SAAOA,IAAIC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBH,IAAII,MAA/B,CAAJ,CAAP;AACD;ADGC,sBAAY1D,IAAZ,EAAkB;ACDb,ADCa,SCDJkD,UAAT,CAAoBS,GAApB,EAAyB;AAC9B,ACLF,SDKSA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,MAAJ,CAAW,CAAX,CAArC;AACD,ADAG,QAAI;AACF9D,AENN,aFMaC,KAAKC,KAAL,CAAWF,IAAX,CAAP;ACCC,ADAF,KAFD,CAEE,GCAUmD,IDAHhD,CAAP,EAAU,OCAT,CAAwB4D,OAAxB,EAAiCC,QAAjC,EAA2CC,KAA3C,EAAkD;AACvD,ADAI,AENN,MDMQC,IDAE/D,GCAK+C,UDAQ9C,CCAG4D,QAAX,CAAb,CDAI,EAA8B;ACClCD,ADAM,UCAEI,KAAR,CAAc,WAAWD,IAAzB,IAAiCD,KAAjC;AACAF,ADAM1D,UCAE8D,KAAR,CAAc,ADAA7D,GAAR,CACE,ICDc4D,IAAtB,IAA8BD,KAA9B,0CDAM;ACCNF,ADEK,OALD,GCGII,GDEG,ECFX,CAAc,GDEGhE,CAAN,GCFU+D,IAArB,IAA6BD,KAA7B;AACAF,ADEG,UCFKI,KAAR,CAAc,MAAMD,IAApB,IAA4BD,KAA5B;AACD;ADGG,SAAK1D,OAAL,GAAeP,KAAKO,OAApB;ACDG,ADEH,SCFY6C,ADEP5C,MAAL,GAAcR,ICFX,CAAuBoE,ADEP5D,MAAnB,GCFG,EAAkC6D,GAAlC,EAAuC;AAC5C,ICZWG,KDYJ,aCZIA;ADaTF,ADEA,SCFKf,ADEA9C,KCFK+C,ADEV,GAAa,ECFR,CAAWa,MAAMD,SAAjB,CADA;AAELG,ADEE7D,SCFG6C,KAAKC,ADEA,EADG,GCDR,CAAWa,MAAMD,SAAjB;AAFA,ADKHzD,AEhBJ,GDWA,eDKgB,CEhBJX,IAAZ,EAAkB;ADenB,ADDgB,AEdG,KFchB;AAID;ACDI,ACjBa,SDiBJqD,aAAT,CAAuBe,SAAvB,EAAkCG,GAAlC,EAAuCD,GAAvC,EAA4C,sECbzCtE,IAJU;ADkBlB,ACjBE,SDiBKuE,MAAMH,SAAN,GAAkBE,GAAzB;AACD;+BDCY,CAAE;;;AEdX,UAAKG,QAAL,GAAgB,IAAIC,MFgBX9D,EEhBO,CAAa,MAAKL,CFgBf,MEhBU,CAAaoE,YAA1B,EAAwC,MAAKpE,OAAL,CAAaqE,GAArD,CAAhB;AFiBA/D,AEhBA,UAAKN,GFgBEO,IEhBP,CFgBA,AEhBa8D,CFgBA,EEhBb,GFgBkBpE,AEhBC,MFgBN,AEhBWiE,CFgBC1D,OAAZ,AEhBM,CFgBc,AEhBA8D,MAAjC,WFgBa,CAAb;;AAEA,AEhBA,UAAKpE,KAAL,GAAaqC,OAAOC,MAAP,CAAc,MAAKtC,KAAnB,EAA0B;AFiBvC,AEhBEqE,UFgBI9D,SEhBS,EADwB,MFiBhBf,KAAKgB,SAAL,CAAe;AACpCV,AEhBAwE,iBFgBS,KAAKxE,AEhBE,CAFqB,MFiBD;AAEpCC,AEhBAwE,gBFgBQ,IEhBM,CFgBDxE,AEnBwB,MFiBD;AAGpCE,AEhBAuE,gBFgBQ,KAAKxE,EEhBI,CAJoB,EFoB7B,CAAWC;AAHiB,AEZpCwE,OFYqB,CAAvB,SEZa;AAL0B,KAA1B,CAAb;AFuBA;AACA7E,AEhBA,UAAK8E,IFgBG7E,CEhBR,EFgBA,CAAY,kBAAZ,EAAgCU,cAAhC;AEjCgB;AFmChB,AEjBD,WFiBME,QAAL,CAAc,EAAEP,YAAY,IAAd,EAAd,EAAoCC,QAApC;AACD;;;4BAEO,AElBA;AFmBN,AElBA,WFkBKO,QAAL,GAAgBC,SAASC,aAAT,CAAuB,SAAvB,CAAhB;AACA,AElBAD,WFkBKE,IElBI8D,MFkBT,GElBA,GAAqB,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAArB;AFmBD,AElBA;;;8BAES,EFkBE/D,IAAIC,OAAO;AAAA,AEjBrBJ,eAASgE,SAAT,GAAqB,IAArB;AACD;AFiBC,UAAI5D,iBAAiBC,WAAjB,IAAgCD,iBAAiBE,IAArD,EAA2D;AACzDH,WAAGI,WAAH,CAAeH,KAAf;AACD,OAFD,MAEO,IAAIA,cEjBF,GFiBmBI,KAArB,EAA4B;AACjCJ,AEjBF,UAAI,CAAC,GFiBGK,EEjBE0D,KFiBR,CAAc,GEjBX,EAAL,EAAuB,MFiBF;AACjB,AEnBK,UAED7E,MFiBCoB,AEnBA,GAEU,KAAKrB,GFiBpB,CAAiBc,CEnBZ,CFmBL,AEjBIb,EFiBiBqB,CAArB,GEnBK;AFoBN,AEpBM,SFkBP,CEfMyD,UAHC,GAGc,KAAKjF,OAHnB,CAGDiF,UAHC;AFqBR,OAJM,MAIA;AACLjE,AElBF,UAAMuD,CFkBD9C,SAAH,GAAeR,CElBG,KAAKiD,GFkBC,EAAxB,GElBkB,CAAcgB,YAAd,CAA2BD,UAA3B,EAAuC9E,MAAvC,CAApB;AFmBC,AElBD,WAAKQ,QAAL,CAAc,EAAE4D,wBAAF,EAAeI,WAAW,IAA1B,EAAd;AFmBD,AElBA;;;kCFoBajD,CElBC,KFkBKC,IAAIV,OAA+B;AAAA,AEjBrD,UFiB6BW,AEjBzB,CAAC,KFiBgD,AEjB3CuD,OAAL,EAAL,EAAqB,4DFiBiB,KAAKvE,QAAU;AEhBrD,WAAKwE,UAAL;AFiBA,AEhBD,UFgBOvD,QAAQhB,SAASiB,aAAT,CAAuBJ,IAAvB,CAAd;AACAG,YAAMF,EAAN,GAAWA,EAAX;;AAEA,WAAKJ,WAAL,CAAiBM,KAAjB,CEjBO,CFiBiBZ,KAAxB;AEjBO,mBACiC,KAAKf,KADtC;AFmBP,AEnBO,UFmBD6B,AElBA0C,QFkBQ5D,IEnBP,KFmBgBC,KElBjB2D,QFkBQ,IEnBP,GFmBkC9C,EAA3B,CAAd;AACA,AEpBO,UFoBHI,AEnBgB2C,KFmBpB,EAAW3C,MAAMC,EEpBV,QFoBI,CAAiBC,CEnBRyC,UFmBT,CAA6B3C,IEpBjC,CFoBI;AEpBJ,UAECqC,YAFD,GAEkB,KAAKpE,OAFvB,CAECoE,YAFD;AFsBP,UAAIxC,MAAJ,EAAY;AACVA,eAAOR,WAAP,CAAmBS,KAAnB;AACD,AEpBD4C,sBAAgB,CAAhB;;AFsBA,AEpBA,UAAIC,GFoBG7C,KAAP,WEpBuB,CAAvB,EAA0B;AFqB3B,AEpBG6C,0BAAkBN,aAAajB,MAAb,GAAsB,CAAxC;AACD,OAFD,MAEO;AACLuB,2BAAmB,CAAnB;AACD,iCFmBU;AACX,WAAK9D,QAAL,CAAcsB,SAAd,GAA0B,EAA1B;AACA,AEnBA,WFmBKC,AEnBAxB,QAAL,CAAc,EAAE8D,EFmBhB,CAAmB,IAAnB,EAAyB,YAAzB,EAAuC,GEnBzB,EFmB8BxE,AEnBdyE,MFmBS,CAAYtC,QAAZ,CAAqB,UAArB,CAAvC,KEnBc,EAAd;AFoBD,AEnBA;;;6BFqBQC,AEnBA,UFmBUhC,UAAU;AAC3B,AEpBO,UFoBDiC,UEnBkC,CFmBvB,IEnB4BpC,CFmBvBA,IEpBf,CFoBP;AACA,AErBO,UACDuE,CFoBDvE,KAAL,GAAaqC,GErBN,IFqBaC,MAAP,CAAc,AEpBrBiC,EFoBO,EAAkBnC,QAAlB,AErBN,EFqBkCD,QAA5B,CAAb;AACA,AEtBO,UFsBH,AErBgBqC,OFqBTrE,QAAP,AEtBG,KFsBiB,MErBJqE,IFqBpB,EAAoCrE,SEtB7B,EFsBP,KACK,KAAKoC,UAAL;AACN,AExBQ,UAEC2B,YAFD,GAEkB,KAAKpE,OAFvB,CAECoE,YAFD;;;AAIPK,sBAAgB,CAAhB,UFsBW,CAAE;;AEpBb,UAAIC,mBAAmBN,aAAajB,MAAb,GAAsB,CAA7C,EAAgD;AAC9CuB,0BAAkB,CAAlB;AACD,OAFD,MAEO;AACLA,2BAAmB,CAAnB;AACD;;AAED,WAAK/D,QAAL,CAAc,EAAE8D,0BAAF,EAAgBC,gCAAhB,EAAd;AACD;;;8BAES;AACR,UAAI,CAAC,KAAKW,QAAL,EAAL,EAAsB;;AADd,oBAGyB,KAAKnF,KAH9B;AAAA,UAGFC,MAHE,WAGFA,MAHE;AAAA,UAGMqE,cAHN,WAGMA,cAHN;AAAA,UAIAS,UAJA,GAIe,KAAKjF,OAJpB,CAIAiF,UAJA;;;AAMR9E,eAASA,OAAOmF,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT;AACAd,wBAAkB,CAAlB;AACA,aAAOS,WAAWT,cAAX,MAA+B,GAAtC,EAA2C;AACzCA,0BAAkB,CAAlB;AACArE,iBAASA,OAAOmF,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT;AACD;;AAED,WAAK3E,QAAL,CAAc,EAAER,cAAF,EAAUqE,8BAAV,EAAd;AACD;;;+BAEU;AACT,UAAI,CAAC,KAAKe,SAAL,EAAL,EAAuB;;AADd,UAGDb,eAHC,GAGmB,KAAKxE,KAHxB,CAGDwE,eAHC;AAAA,oBAIwB,KAAKxE,KAJ7B;AAAA,UAIHsE,cAJG,WAIHA,cAJG;AAAA,UAIarE,MAJb,WAIaA,MAJb;AAAA,qBAK4B,KAAKH,OALjC;AAAA,UAKDoE,YALC,YAKDA,YALC;AAAA,UAKaa,UALb,YAKaA,UALb;;;AAOT9E,gBAAUiE,aAAaM,eAAb,CAAV;AACAF,wBAAkB,CAAlB;AACA,aAAOS,WAAWT,cAAX,MAA+B,GAAtC,EAA2C;AACzCA,0BAAkB,CAAlB;AACArE,kBAAU,GAAV;AACD;;AAED,WAAKQ,QAAL,CAAc,EAAER,cAAF,EAAUqE,8BAAV,EAAd;AACD;;;+BAEU5E,GAAG;AACZ,cAAQA,EAAEyE,GAAV;AACE,aAAK,WAAL;AACE,eAAKmB,MAAL;AACA;;AAEF,aAAK,YAAL;AACE,eAAKC,MAAL;AACA;;AAEF,aAAK,OAAL;AACE,eAAKC,QAAL;AACA;;AAEF,aAAK,WAAL;AACE,eAAKC,OAAL;AACA;;AAEF;AACE,iBAlBJ,CAkBY;AAlBZ;;AAqBA/F,QAAEgG,cAAF,GAtBY,CAsBQ;AACrB;;;gCAEW;AAAA,oBACoB,KAAK1F,KADzB;AAAA,UACFC,MADE,WACFA,MADE;AAAA,UACMwE,SADN,WACMA,SADN;AAAA,UAEFM,UAFE,GAEa,KAAKjF,OAFlB,CAEFiF,UAFE;;;AAIV,aAAO,CAACN,SAAD,IAAcxE,OAAOgD,MAAP,GAAgB8B,WAAW9B,MAAhD;AACD;;;+BAEU;AAAA,oBACqC,KAAKjD,KAD1C;AAAA,UACDC,MADC,WACDA,MADC;AAAA,UACOqE,cADP,WACOA,cADP;AAAA,UACuBG,SADvB,WACuBA,SADvB;;AAET,aAAO,CAACA,SAAD,IAAcxE,OAAOgD,MAAP,GAAgB,CAA9B,IAAmCqB,iBAAiB,CAA3D;AACD;;;gCAEW;AAAA,oBACoB,KAAKtE,KADzB;AAAA,UACFC,MADE,WACFA,MADE;AAAA,UACMwE,SADN,WACMA,SADN;;AAEV,aAAO,CAACA,SAAD,IAAcxE,OAAOgD,MAAP,GAAgB,CAArC;AACD;;;8BAES;AAAA,oBAC0B,KAAKjD,KAD/B;AAAA,UACAE,UADA,WACAA,UADA;AAAA,UACYuE,SADZ,WACYA,SADZ;;AAER,aAAOA,aAAa,CAACvE,UAArB;AACD;;;iCAEY;AACX;;AAEA,WAAKyF,YAAL;AACA,WAAKC,aAAL;AACA,WAAKC,cAAL;AACA,WAAKC,UAAL;AACD;;;iCAEY;AAAA,oBAC+B,KAAK9F,KADpC;AAAA,UACHuE,YADG,WACHA,YADG;AAAA,UACWC,eADX,WACWA,eADX;;AAEX,UAAMuB,WAAW,KAAKC,eAAL,CAAqBzB,YAArB,CAAjB;;AAEA;AACA,UAAMzD,KAAKH,SAASC,aAAT,CAAuB,yBAAvB,CAAX;AACA,gCAAeE,EAAf,EAAmB,WAAnB,eAA2C,CAACiF,QAA5C;;AAEA;AACA;AACAE,iBAAW,YAAM;AACftF,iBACGuF,gBADH,CACoB,uCADpB,EAEG9E,OAFH,CAEW,UAAC+E,CAAD,EAAIvC,GAAJ,EAAY;AACnB,cAAIA,QAAQY,eAAZ,EAA6B2B,EAAEC,SAAF,CAAYC,GAAZ,CAAgB,cAAhB,EAA7B,KACKF,EAAEC,SAAF,CAAYE,MAAZ,CAAmB,cAAnB;AACN,SALH;AAMD,OAPD,EAOG,EAPH;AAQD;;;qCAEgB;AACf,UAAMxF,KAAKH,SAASC,aAAT,CAAuB,iBAAvB,CAAX;AACAE,SAAGkB,SAAH,GAAe,EAAf,CAFe,CAEI;AACnB,WAAKX,WAAL,CAAiBP,EAAjB,EAAqB,KAAKyF,cAAL,EAArB;AACD;;;mCAEc;AACb,UAAMzF,KAAKH,SAASC,aAAT,CAAuB,eAAvB,CAAX;AACAE,SAAGkB,SAAH,GAAe,EAAf,CAFa,CAEM;AACnB,WAAKX,WAAL,CAAiBP,EAAjB,EAAqB,KAAK0F,YAAL,EAArB;AACD;;;oCAEe;AACd,WAAKC,WAAL,CAAiBC,QAAjB,GAA4B,CAAC,KAAKvB,QAAL,EAA7B;AACA,WAAKwB,YAAL,CAAkBD,QAAlB,GAA6B,CAAC,KAAKrB,SAAL,EAA9B;AACA,WAAKuB,YAAL,CAAkBF,QAAlB,GAA6B,CAAC,KAAK5B,SAAL,EAA9B;AACA,WAAK+B,gBAAL,CAAsBH,QAAtB,GAAiC,CAAC,KAAKzB,OAAL,EAAlC;AACD;;;iCAEY;AACX;;AAEA,WAAKhD,aAAL,CAAmB,GAAnB,EAAwB,mBAAxB,EAA6C,KAAK6E,iBAAL,EAA7C;AACA,WAAK7E,aAAL,CAAmB,GAAnB,EAAwB,gBAAxB,EAA0C,KAAKsE,cAAL,EAA1C;AACA,WAAKtE,aAAL,CAAmB,KAAnB,EAA0B,YAA1B,EAAwC,KAAK8E,gBAAL,EAAxC;AACA,WAAK9E,aAAL,CAAmB,GAAnB,EAAwB,cAAxB,EAAwC,KAAKuE,YAAL,EAAxC;;AAEA;AACA,WAAKI,YAAL,GAAoB,KAAK3E,aAAL,CAClB,QADkB,EAElB,cAFkB,EAGlB,KAAKlC,MAAL,CAAYO,OAAZ,CAAoB,kBAApB,CAHkB,CAApB;AAKA,WAAKsG,YAAL,CAAkBI,OAAlB,GAA4B,KAAKC,QAAL,CAAcpC,IAAd,CAAmB,IAAnB,CAA5B;AACA,WAAK+B,YAAL,CAAkBF,QAAlB,GAA6B,IAA7B;;AAEA;AACA,WAAKG,gBAAL,GAAwB,KAAK5E,aAAL,CACtB,QADsB,EAEtB,YAFsB,EAGtB,KAAKlC,MAAL,CAAYO,OAAZ,CAAoB,iBAApB,CAHsB,CAAxB;AAKA,WAAKuG,gBAAL,CAAsBG,OAAtB,GAAgC,KAAKE,YAAL,CAAkBrC,IAAlB,CAAuB,IAAvB,CAAhC;AACA,WAAKgC,gBAAL,CAAsBH,QAAtB,GAAiC,IAAjC;;AAEA,WAAKnE,UAAL;AACD;;;wCAEmB;AAClB,aAAO,CACL5B,SAASwG,cAAT,CAAwB,KAAKpH,MAAL,CAAYmC,QAAZ,CAAqB,iBAArB,CAAxB,CADK,EAELvB,SAASiB,aAAT,CAAuB,IAAvB,CAFK,EAGLjB,SAASwG,cAAT,CAAwB,KAAKpH,MAAL,CAAYmC,QAAZ,CAAqB,qBAArB,CAAxB,CAHK,EAILvB,SAASiB,aAAT,CAAuB,IAAvB,CAJK,EAKLjB,SAASwG,cAAT,CAAwB,KAAKpH,MAAL,CAAYmC,QAAZ,CAAqB,mBAArB,CAAxB,CALK,EAMLvB,SAASwG,cAAT,CAAwB,GAAxB,CANK,EAOLxG,SAASwG,cAAT,CAAwB,KAAKC,aAAL,EAAxB,CAPK,CAAP;AASD;;;qCAEgB;AAAA,UACP9C,cADO,GACY,KAAKtE,KADjB,CACPsE,cADO;AAAA,UAEPS,UAFO,GAEQ,KAAKjF,OAFb,CAEPiF,UAFO;;;AAIf,UAAMsC,YAAY1G,SAASwG,cAAT,CAChB,KAAKpH,MAAL,CAAYmC,QAAZ,CAAqB,sBAArB,CADgB,CAAlB;;AAIA,UAAMoF,QAAQ,CAACD,SAAD,EAAY1G,SAASwG,cAAT,CAAwB,GAAxB,CAAZ,CAAd;;AAEA,UAAMI,QAAQxC,WAAWyC,KAAX,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,UAACtB,CAAD,EAAIvC,GAAJ,EAAY;AACjD,YAAM9C,KAAKH,SAASiB,aAAT,CAAuB,MAAvB,CAAX;AACAd,WAAGsF,SAAH,CAAaC,GAAb,CAAiB,aAAjB;AACA,YAAIzC,QAAQU,cAAZ,EAA4BxD,GAAGsF,SAAH,CAAaC,GAAb,CAAiB,cAAjB;AAC5BvF,WAAGS,SAAH,GAAe4E,CAAf;AACA,eAAOrF,EAAP;AACD,OANa,CAAd;;AAQA,UAAM4G,aAAa/G,SAASiB,aAAT,CAAuB,QAAvB,CAAnB;AACA8F,iBAAWnG,SAAX,GAAuB,KAAKxB,MAAL,CAAYmC,QAAZ,CAAqB,cAArB,CAAvB;;AAEA,aAAO,CAACoF,KAAD,EAAQC,KAAR,EAAe5G,SAASiB,aAAT,CAAuB,IAAvB,CAAf,EAA6C8F,UAA7C,CAAP;AACD;;;oCAEe;AAAA,sBACoB,KAAK5H,OADzB;AAAA,UACNqE,GADM,aACNA,GADM;AAAA,UACawD,EADb,aACDzD,YADC;;AAEd,UAAM0D,MAAMD,GAAG1E,MAAf;AACA,aAAO,CAAC,CAAD,EAAI,CAAJ,EAAO2E,MAAM,CAAb,EAAgBA,MAAM,CAAtB,EACJH,GADI,CAEH;AAAA,eAAQE,GAAGE,cAAcD,GAAd,EAAmBtG,CAAnB,CAAH,CAAR,gBAAuCqG,GAAGE,cAAcD,GAAd,EAAmBtG,IAAI6C,GAAvB,CAAH,CAAvC;AAAA,OAFG,EAIJ2D,IAJI,CAIC,GAJD,CAAP;AAKD;;;mCAEc;AAAA,qBAC8B,KAAK9H,KADnC;AAAA,UACLC,MADK,YACLA,MADK;AAAA,UACGoE,WADH,YACGA,WADH;AAAA,UACgBI,SADhB,YACgBA,SADhB;;;AAGb,UAAM4C,YAAY1G,SAASwG,cAAT,CAChB,KAAKpH,MAAL,CAAYO,OAAZ,CAAoB,kBAApB,CADgB,CAAlB;;AAIA,UAAMgH,QAAQ,CAACD,SAAD,EAAY1G,SAASwG,cAAT,CAAwB,GAAxB,CAAZ,CAAd;;AAEA,UAAMI,QAAQtH,OAAOuH,KAAP,CAAa,EAAb,EAAiBC,GAAjB,CAAqB,UAACtB,CAAD,EAAIvC,GAAJ,EAAY;AAC7C,YAAM9C,KAAKH,SAASiB,aAAT,CAAuB,MAAvB,CAAX;AACAd,WAAGsF,SAAH,CAAaC,GAAb,CAAiBhC,YAAYT,GAAZ,IAAmB,SAAnB,GAA+B,WAAhD;AACA9C,WAAGS,SAAH,GAAe4E,CAAf;AACA,eAAOrF,EAAP;AACD,OALa,CAAd;;AAOA,UAAMiH,aAAapH,SAASwG,cAAT,CAAwBlH,MAAxB,CAAnB;;AAEA,aAAOwE,YAAY,CAAC6C,KAAD,EAAQC,KAAR,CAAZ,GAA6B,CAACD,KAAD,EAAQS,UAAR,CAApC;AACD;;;uCAEkB;AAAA;;AAAA,UACT7D,YADS,GACQ,KAAKpE,OADb,CACToE,YADS;;;AAGjB,UAAM8D,SAAS,GAAf;;AAEA,UAAMT,QAAQrD,aAAasD,KAAb,CAAmB,EAAnB,EAAuBC,GAAvB,CAA2B,UAACtB,CAAD,EAAIvC,GAAJ,EAAY;AACnD,YAAMmC,WAAW,OAAKC,eAAL,CAAqBpC,GAArB,CAAjB;AACA,YAAM9C,KAAKH,SAASiB,aAAT,CAAuB,IAAvB,CAAX;AACAd,WAAGsF,SAAH,CAAaC,GAAb,CAAiB,cAAjB;AACAvF,WAAGS,SAAH,GAAe4E,CAAf;AACA,kCACErF,EADF,EAEE,WAFF,eAGaiF,QAHb,wBAGwCiC,MAHxC;AAKA,eAAOlH,EAAP;AACD,OAXa,CAAd;;AAaA,UAAMmH,OAAO,KAAKhG,aAAL,CAAmB,IAAnB,EAAyB,YAAzB,EAAuCsF,KAAvC,EAA8C,IAA9C,CAAb;;AAEA,UAAMW,cAAc,KAAKjG,aAAL,CAAmB,KAAnB,EAA0B,aAA1B,EAAyCgG,IAAzC,EAA+C,IAA/C,CAApB;;AAEA,UAAMxB,cAAc,KAAKxE,aAAL,CAClB,QADkB,EAElB,aAFkB,EAGlB,KAAKlC,MAAL,CAAYO,OAAZ,CAAoB,WAApB,CAHkB,EAIlB,IAJkB,CAApB;AAMA,UAAM6H,aAAa,KAAKlG,aAAL,CAAmB,QAAnB,EAA6B,YAA7B,EAA2C,KAA3C,EAAkD,IAAlD,CAAnB;AACA,UAAMmG,aAAa,KAAKnG,aAAL,CAAmB,QAAnB,EAA6B,YAA7B,EAA2C,KAA3C,EAAkD,IAAlD,CAAnB;AACA,UAAM0E,eAAe,KAAK1E,aAAL,CACnB,QADmB,EAEnB,cAFmB,EAGnB,KAAKlC,MAAL,CAAYO,OAAZ,CAAoB,YAApB,CAHmB,EAInB,IAJmB,CAArB;;AAOAmG,kBAAYC,QAAZ,GAAuB,IAAvB;;AAEAD,kBAAYO,OAAZ,GAAsB,KAAKvB,OAAL,CAAaZ,IAAb,CAAkB,IAAlB,CAAtB;AACAsD,iBAAWnB,OAAX,GAAqB,KAAK1B,MAAL,CAAYT,IAAZ,CAAiB,IAAjB,CAArB;AACAuD,iBAAWpB,OAAX,GAAqB,KAAKzB,MAAL,CAAYV,IAAZ,CAAiB,IAAjB,CAArB;AACA8B,mBAAaK,OAAb,GAAuB,KAAKxB,QAAL,CAAcX,IAAd,CAAmB,IAAnB,CAAvB;;AAEA,UAAMwD,WAAW,KAAKpG,aAAL,CAAmB,KAAnB,EAA0B,UAA1B,EAAsC,CACrDwE,WADqD,EAErD0B,UAFqD,EAGrDC,UAHqD,EAIrDzB,YAJqD,CAAtC,CAAjB;;AAOA,WAAKF,WAAL,GAAmBA,WAAnB;AACA,WAAKE,YAAL,GAAoBA,YAApB;;AAEA,aAAO,CAACuB,WAAD,EAAcG,QAAd,CAAP;AACD;;;oCAEeC,OAAO;AACrB,aAAOA,SAAS,MAAM,KAAKxI,OAAL,CAAaoE,YAAb,CAA0BjB,MAAzC,CAAP;AACD;;;;;;IAGUgB,mBAAAA;AACX,oBAAYC,YAAZ,EAA0BC,GAA1B,EAA+B;AAAA;;AAC7B,QAAMoE,OAAO,eAAeC,IAAf,CAAoBrE,GAApB,CAAb;AACA,SAAKC,MAAL,GAAcmE,KAAK,CAAL,MAAY,GAAZ,GAAkB,CAACE,SAASF,KAAK,CAAL,CAAT,CAAnB,GAAuCE,SAASF,KAAK,CAAL,CAAT,CAArD;AACA,SAAKrE,YAAL,GAAoBA,YAApB;AACD;;;;+BAEUiC,GAAG;AACZ,UAAI,KAAKjC,YAAL,CAAkBwE,OAAlB,CAA0BvC,CAA1B,MAAiC,CAAC,CAAtC,EAAyC,OAAOA,CAAP;AACzC,UAAMvC,MAAMiE,cACV,KAAK3D,YAAL,CAAkBjB,MADR,EAEV,KAAKiB,YAAL,CAAkBwE,OAAlB,CAA0BvC,CAA1B,IAA+B,KAAK/B,MAF1B,CAAZ;AAIA,aAAO,KAAKF,YAAL,CAAkBN,GAAlB,CAAP;AACD;;;kCAEa+E,GAAG;AACf,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,eAAOA,EACJvF,WADI,GAEJoE,KAFI,CAEE,EAFF,EAGJC,GAHI,CAGA,KAAKmB,UAAL,CAAgB/D,IAAhB,CAAqB,IAArB,CAHA,EAIJiD,IAJI,CAIC,EAJD,CAAP;AAKD;AACF;;;mCAEcc,YAAYC,aAAa;AACtC,aACED,cAAcC,WAAd,IAA6BD,eAAe,KAAKA,UAAL,CAAgBC,WAAhB,CAD9C;AAGD;;;iCAEY9D,YAAY+D,SAAS;AAAA;;AAChC,aAAOA,QACJ1F,WADI,GAEJoE,KAFI,CAEE,EAFF,EAGJC,GAHI,CAGA,UAACtB,CAAD,EAAIvC,GAAJ;AAAA,eAAY,OAAKmF,cAAL,CAAoBhE,WAAWnB,GAAX,CAApB,EAAqCuC,CAArC,CAAZ;AAAA,OAHA,CAAP;AAID;;;;;;AAGH,SAAS0B,aAAT,CAAuBmB,QAAvB,EAAiCV,KAAjC,EAAwC;AACtC,MAAIA,SAASU,QAAb,EAAuB,OAAOV,QAAQU,QAAf;AACvB,MAAIV,QAAQ,CAAZ,EAAe,OAAOA,QAAQU,QAAf;AACf,SAAOV,KAAP;AACD;;AAEDlI,OAAO2D,OAAP,GAAiBA,OAAjB","file":"Puzzle1.7d557034.map","sourceRoot":"../src","sourcesContent":["export class BasePuzzle {\n  /**\n   * @param {object} data\n   */\n\n  constructor(data) {\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        // eslint-disable-next-line no-console\n        console.log(\n          \"SyntaxError while parsing settings. Using settings as is.\"\n        );\n      } else throw e;\n    }\n\n    this.setting = data.setting;\n    this.locale = data.locale;\n\n    this.state = {\n      answer: \"\",\n      answerSent: false\n    };\n  }\n\n  onSubmit() {}\n\n  sendAnswer(callback) {\n    window.alert(this.locale.general[\"str-answer-sent\"]);\n\n    // TODO: Actually send \"completeAnswer\" to server\n    const completeAnswer = JSON.stringify({\n      setting: this.setting,\n      locale: this.locale,\n      answer: this.state.answer\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(\"Complete answer:\", completeAnswer);\n\n    this.setState({ answerSent: true }, callback);\n  }\n\n  setup() {\n    this.parentEl = document.querySelector(\"#puzzle\");\n    this.renderHTML();\n  }\n\n  renderInner(el, inner) {\n    if (inner instanceof HTMLElement || inner instanceof Text) {\n      el.appendChild(inner);\n    } else if (inner instanceof Array) {\n      inner.forEach(i => {\n        this.renderInner(el, i);\n      });\n    } else {\n      el.innerText = inner || \"\";\n    }\n  }\n\n  renderElement(type, id, inner, parent = this.parentEl) {\n    const newEl = document.createElement(type);\n    newEl.id = id;\n\n    this.renderInner(newEl, inner);\n\n    const oldEl = document.querySelector(`#${id}`);\n    if (oldEl) oldEl.parentNode.removeChild(oldEl);\n\n    if (parent) {\n      parent.appendChild(newEl);\n    }\n\n    return newEl;\n  }\n\n  renderHTML() {\n    this.parentEl.innerHTML = \"\";\n    this.renderElement(\"h1\", \"puzzleName\", this.locale.specific[\"str-name\"]);\n  }\n\n  setState(newState, callback) {\n    const oldState = this.state;\n    this.state = Object.assign({}, oldState, newState);\n    if (typeof callback === \"function\") callback();\n    else this.updateView();\n  }\n\n  updateView() {}\n}\n","export function randomChoice(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\nexport function setVendorStyle(element, property, value) {\n  const prop = capitalize(property);\n  element.style[\"webkit\" + prop] = value;\n  element.style[\"moz\" + prop] = value;\n  element.style[\"ms\" + prop] = value;\n  element.style[\"o\" + prop] = value;\n}\n\nexport function indexToRowCol(numOfCols, idx) {\n  return {\n    col: Math.floor(idx % numOfCols),\n    row: Math.floor(idx / numOfCols)\n  };\n}\n\nexport function rowColToIndex(numOfCols, row, col) {\n  return row * numOfCols + col;\n}\n","import { BasePuzzle } from \"./BasePuzzle\";\nimport { setVendorStyle } from \"../lib/util\";\n\nimport \"./Puzzle1.css\";\n\nexport class Puzzle1 extends BasePuzzle {\n  constructor(data) {\n    /**\n     * @param {object} data\n     */\n    super(data);\n\n    this.cipherer = new Cipherer(this.setting.characterSet, this.setting.key);\n    this.setting.key = this.cipherer.factor;\n\n    this.state = Object.assign(this.state, {\n      answerCheck: [],\n      currentCharIdx: 0,\n      ringRotation: 0,\n      selectedCharIdx: 0,\n      submitted: false\n    });\n\n    this.setup();\n  }\n\n  setup() {\n    super.setup();\n    document.onkeydown = this.onKeyPress.bind(this);\n  }\n\n  cleanUp() {\n    document.onkeydown = null;\n  }\n\n  onSubmit() {\n    if (!this.canSubmit()) return;\n    const { answer } = this.state;\n    const { cipherText } = this.setting;\n    const answerCheck = this.cipherer.checkMessage(cipherText, answer);\n    this.setState({ answerCheck, submitted: true });\n  }\n\n  onSendAnswer() {\n    if (!this.canSend()) return;\n    this.sendAnswer();\n  }\n\n  onPrev() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation -= 1;\n\n    if (selectedCharIdx <= 0) {\n      selectedCharIdx = characterSet.length - 1;\n    } else {\n      selectedCharIdx -= 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onNext() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation += 1;\n\n    if (selectedCharIdx >= characterSet.length - 1) {\n      selectedCharIdx = 0;\n    } else {\n      selectedCharIdx += 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onErase() {\n    if (!this.canErase()) return;\n\n    let { answer, currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    answer = answer.slice(0, -1);\n    currentCharIdx -= 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx -= 1;\n      answer = answer.slice(0, -1);\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onSelect() {\n    if (!this.canSelect()) return;\n\n    const { selectedCharIdx } = this.state;\n    let { currentCharIdx, answer } = this.state;\n    const { characterSet, cipherText } = this.setting;\n\n    answer += characterSet[selectedCharIdx];\n    currentCharIdx += 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx += 1;\n      answer += \" \";\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onKeyPress(e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.onPrev();\n        break;\n\n      case \"ArrowRight\":\n        this.onNext();\n        break;\n\n      case \"Enter\":\n        this.onSelect();\n        break;\n\n      case \"Backspace\":\n        this.onErase();\n        break;\n\n      default:\n        return; // exit this handler for other keys\n    }\n\n    e.preventDefault(); // prevent the default action (scroll / move caret)\n  }\n\n  canSelect() {\n    const { answer, submitted } = this.state;\n    const { cipherText } = this.setting;\n\n    return !submitted && answer.length < cipherText.length;\n  }\n\n  canErase() {\n    const { answer, currentCharIdx, submitted } = this.state;\n    return !submitted && answer.length > 0 && currentCharIdx > 0;\n  }\n\n  canSubmit() {\n    const { answer, submitted } = this.state;\n    return !submitted && answer.length > 0;\n  }\n\n  canSend() {\n    const { answerSent, submitted } = this.state;\n    return submitted && !answerSent;\n  }\n\n  updateView() {\n    super.updateView();\n\n    this.updateAnswer();\n    this.updateButtons();\n    this.updateQuestion();\n    this.updateRing();\n  }\n\n  updateRing() {\n    const { ringRotation, selectedCharIdx } = this.state;\n    const rotation = this.getRingRotation(ringRotation);\n\n    // Update rotation\n    const el = document.querySelector(\"#puzzleRing #characters\");\n    setVendorStyle(el, \"transform\", `rotateY(${-rotation}deg)`);\n\n    // Update selected class\n    // Use setTimeout so the class is set somewhat in sync with the animation\n    setTimeout(() => {\n      document\n        .querySelectorAll(\"#puzzleRing #characters .characterSet\")\n        .forEach((c, idx) => {\n          if (idx === selectedCharIdx) c.classList.add(\"current-char\");\n          else c.classList.remove(\"current-char\");\n        });\n    }, 60);\n  }\n\n  updateQuestion() {\n    const el = document.querySelector(\"#puzzleQuestion\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderQuestion());\n  }\n\n  updateAnswer() {\n    const el = document.querySelector(\"#puzzleAnswer\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderAnswer());\n  }\n\n  updateButtons() {\n    this.eraseButton.disabled = !this.canErase();\n    this.selectButton.disabled = !this.canSelect();\n    this.submitButton.disabled = !this.canSubmit();\n    this.sendAnswerButton.disabled = !this.canSend();\n  }\n\n  renderHTML() {\n    super.renderHTML();\n\n    this.renderElement(\"p\", \"puzzleDescription\", this.renderDescription());\n    this.renderElement(\"p\", \"puzzleQuestion\", this.renderQuestion());\n    this.renderElement(\"div\", \"puzzleRing\", this.renderCipherRing());\n    this.renderElement(\"p\", \"puzzleAnswer\", this.renderAnswer());\n\n    // \"Tarkista\"-button\n    this.submitButton = this.renderElement(\n      \"button\",\n      \"puzzleSubmit\",\n      this.locale.general[\"str-check-answer\"]\n    );\n    this.submitButton.onclick = this.onSubmit.bind(this);\n    this.submitButton.disabled = true;\n\n    // \"Lähetä\"-button\n    this.sendAnswerButton = this.renderElement(\n      \"button\",\n      \"puzzleSend\",\n      this.locale.general[\"str-send-answer\"]\n    );\n    this.sendAnswerButton.onclick = this.onSendAnswer.bind(this);\n    this.sendAnswerButton.disabled = true;\n\n    this.updateView();\n  }\n\n  renderDescription() {\n    return [\n      document.createTextNode(this.locale.specific[\"str-description\"]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.locale.specific[\"str-key-description\"]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.locale.specific[\"str-example-label\"]),\n      document.createTextNode(\" \"),\n      document.createTextNode(this.renderExample())\n    ];\n  }\n\n  renderQuestion() {\n    const { currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    const labelText = document.createTextNode(\n      this.locale.specific[\"str-ciphertext-label\"]\n    );\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = cipherText.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(\"cipher-char\");\n      if (idx === currentCharIdx) el.classList.add(\"current-char\");\n      el.innerText = c;\n      return el;\n    });\n\n    const questionEl = document.createElement(\"strong\");\n    questionEl.innerText = this.locale.specific[\"str-question\"];\n\n    return [label, chars, document.createElement(\"br\"), questionEl];\n  }\n\n  renderExample() {\n    const { key, characterSet: cs } = this.setting;\n    const len = cs.length;\n    return [0, 1, len - 2, len - 1]\n      .map(\n        i => `${cs[rotatingIndex(len, i)]} → ${cs[rotatingIndex(len, i + key)]}`\n      )\n      .join(\",\");\n  }\n\n  renderAnswer() {\n    const { answer, answerCheck, submitted } = this.state;\n\n    const labelText = document.createTextNode(\n      this.locale.general[\"str-answer-label\"]\n    );\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = answer.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(answerCheck[idx] ? \"correct\" : \"incorrect\");\n      el.innerText = c;\n      return el;\n    });\n\n    const answerText = document.createTextNode(answer);\n\n    return submitted ? [label, chars] : [label, answerText];\n  }\n\n  renderCipherRing() {\n    const { characterSet } = this.setting;\n\n    const radius = 300;\n\n    const chars = characterSet.split(\"\").map((c, idx) => {\n      const rotation = this.getRingRotation(idx);\n      const el = document.createElement(\"li\");\n      el.classList.add(\"characterSet\");\n      el.innerText = c;\n      setVendorStyle(\n        el,\n        \"transform\",\n        `rotateY(${rotation}deg) translateZ(${radius}px)`\n      );\n      return el;\n    });\n\n    const ring = this.renderElement(\"ul\", \"characters\", chars, null);\n\n    const ringWrapper = this.renderElement(\"div\", \"ringWrapper\", ring, null);\n\n    const eraseButton = this.renderElement(\n      \"button\",\n      \"eraseButton\",\n      this.locale.general[\"str-erase\"],\n      null\n    );\n    const prevButton = this.renderElement(\"button\", \"prevButton\", \"<<<\", null);\n    const nextButton = this.renderElement(\"button\", \"nextButton\", \">>>\", null);\n    const selectButton = this.renderElement(\n      \"button\",\n      \"selectButton\",\n      this.locale.general[\"str-select\"],\n      null\n    );\n\n    eraseButton.disabled = true;\n\n    eraseButton.onclick = this.onErase.bind(this);\n    prevButton.onclick = this.onPrev.bind(this);\n    nextButton.onclick = this.onNext.bind(this);\n    selectButton.onclick = this.onSelect.bind(this);\n\n    const controls = this.renderElement(\"div\", \"controls\", [\n      eraseButton,\n      prevButton,\n      nextButton,\n      selectButton\n    ]);\n\n    this.eraseButton = eraseButton;\n    this.selectButton = selectButton;\n\n    return [ringWrapper, controls];\n  }\n\n  getRingRotation(index) {\n    return index * (360 / this.setting.characterSet.length);\n  }\n}\n\nexport class Cipherer {\n  constructor(characterSet, key) {\n    const keys = /([+-])(\\d+)/g.exec(key);\n    this.factor = keys[1] === \"-\" ? -parseInt(keys[2]) : parseInt(keys[2]);\n    this.characterSet = characterSet;\n  }\n\n  cipherChar(c) {\n    if (this.characterSet.indexOf(c) === -1) return c;\n    const idx = rotatingIndex(\n      this.characterSet.length,\n      this.characterSet.indexOf(c) + this.factor\n    );\n    return this.characterSet[idx];\n  }\n\n  cipherMessage(m) {\n    if (typeof m === \"string\") {\n      return m\n        .toUpperCase()\n        .split(\"\")\n        .map(this.cipherChar.bind(this))\n        .join(\"\");\n    }\n  }\n\n  checkCharacter(cipherChar, charToCheck) {\n    return (\n      cipherChar && charToCheck && cipherChar === this.cipherChar(charToCheck)\n    );\n  }\n\n  checkMessage(cipherText, message) {\n    return message\n      .toUpperCase()\n      .split(\"\")\n      .map((c, idx) => this.checkCharacter(cipherText[idx], c));\n  }\n}\n\nfunction rotatingIndex(arrayLen, index) {\n  if (index >= arrayLen) return index - arrayLen;\n  if (index < 0) return index + arrayLen;\n  return index;\n}\n\nwindow.Puzzle1 = Puzzle1;\n"]}