{"version":3,"sources":["lib/util.js","puzzles/BasePuzzle.js","puzzles/Puzzle1.js","initPuzzle1.js","initPuzzle2.js","initPuzzle3.js","index.js"],"names":["randomChoice","capitalize","setVendorStyle","indexToRowCol","rowColToIndex","arr","Math","floor","random","length","str","charAt","toUpperCase","substr","element","property","value","prop","style","numOfCols","idx","col","row","defaultOptions","BasePuzzle","options","Object","assign","state","answer","answerSent","elementSelectors","parent","callback","window","alert","completeAnswer","JSON","stringify","setting","console","log","setState","parentEl","document","querySelector","renderHTML","el","inner","HTMLElement","Text","appendChild","Array","forEach","renderInner","i","innerText","type","id","newEl","createElement","oldEl","parentNode","removeChild","innerHTML","renderElement","newState","oldState","updateView","Puzzle1","cipherer","Cipherer","characterSet","key","answerCheck","currentCharIdx","ringRotation","selectedCharIdx","submitted","setup","onkeydown","onKeyPress","bind","canSubmit","cipherText","checkMessage","canSend","sendAnswer","canErase","slice","canSelect","e","onPrev","onNext","onSelect","onErase","preventDefault","updateAnswer","updateButtons","updateQuestion","updateRing","rotation","getRingRotation","setTimeout","querySelectorAll","c","classList","add","remove","renderQuestion","renderAnswer","eraseButton","disabled","selectButton","submitButton","sendAnswerButton","renderDescription","renderCipherRing","onclick","onSubmit","onSendAnswer","keyExample","createTextNode","labelText","label","chars","split","map","questionEl","answerText","radius","ring","ringWrapper","prevButton","nextButton","controls","index","keys","exec","factor","parseInt","indexOf","m","cipherChar","join","charToCheck","message","checkCharacter","init","possibleSettings","puzzleSetting","possibleMessages","cipherMessage","puzzleOptions","Puzzle2","rows","cols","objects","examples","puzzleInputs","puzzleQuestions","question","input","Puzzle3","backgroundUrl","slots","correctDraggable","top","left","draggables","content","activatePuzzle","activePuzzle","cleanUp"],"mappings":";;;;;;;;;;;;;;QAAgBA,eAAAA;AGAhB,QHIgBC,aAAAA;QAIAC,iBAAAA;AGPhB,ACDA,AHAA,IAAMqB,IDgBUpB,aChBO,GDgBPA;ACfd,QDsBcC,cCtBM,EDsBNA,YCvBO;AKAvB,AHGA,ACDA,AJFO,ACEL,IECIiE,ACDAqF,KJFU1J,KGGAkC,ACDAA,ODCOmC,ACDAqF,AJFhB,CAAsBrJ,ACEP,GDFf,EAA2B,CGGlC,ACDA,IHFuB;ADCrB,ACEA,SDFOA,IAAIC,KAAKC,GCEG,EDFR,CAAWD,KAAKE,ACDN,MDCC,KAAgBH,IAAII,MAA/B,CAAJ,CAAP;AMCF,AHGA,ACDA,ACJA,ALEC,ACEC,SECO2I,ACDAA,IDCT,ACDA,GDCgB,ACDA,KHAK,oBAJE;AEMrB,ACDA,AHAA,MECM5E,ACDA6E,UHAQ,KECO,ICDI,AHLJ,CGMnB,0BDAF;ACCIM,ACLN,ALEO,ACEL,SDFc1J,CIGJ,EADR,GHAW,IDFR,CAAoBS,GAApB,EAAyB;AGI9B,ACAIkJ,AJHJ,ACLqB,CAAvB,KEQQP,GHHC3I,CIGG,EAFR,CJDSC,MAAJ,CAAW,CAAX,EAAcC,EGGI,CACvB,QHJK,KAA8BF,IAAIG,MAAJ,CAAW,CAAX,CAArC;AMFF,AHOM4D,ACDAoF,AJHL,AEND,SCUW,IADP,ACAW,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,UAAP,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,WAAP,CAJO,CAHX;ADKEpC,ACIAqC,IHNOtI,UGMG,CAAC,CDJC,SFFLA,IGMG,EAAiB,cAAjB;ADNZ,ACHA,AJEG,ACEL,ACTF,GCO2B,ACHA,EDQvB,ACIA,IJTYtB,cAAT,CAAwBY,OAAxB,EAAiCC,QAAjC,EAA2CC,KAA3C,EAAkD;AGMnDyD,ACIAkF,AJTJ,MAAM1I,GGKG,CCIC,EADR,CDJA,AHJWhB,WAAWc,QAAX,CAAb;AMLF,AHWM0G,ACIAmC,ACfN,ALME9I,AEPF,IGCMqJ,MDeM,AJTFjJ,EION,ECbYgB,CLMd,CGKgB,AHLF,KKNOiI,MLMIlJ,CKN3B,GLME,IAAiCD,KAAjC;AGGE,ACOE6I,AJTJ/I,GGHyB,EASvB,KHNMI,GISK,CACP,CAAC,AJVP,CIUM,AJVQ,EIUJ,CAAJ,EAAO,GJVSD,GIUhB,CADO,AJTb,EIWM,CAAC,CAAD,AJXwBD,EIWpB,CAAJ,EAAO,AJXb,UIWM,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,WAAP,CAJO,CAHX;ADCEyD,ACQAqF,ACpBN,ALMEhJ,ACEA,SEIS,AEZFsI,CLMClI,GGKN,AEXJ,CDoBgB,CAAC,AJdf,CKNc,ALMA,OAAOD,CCEK,GDF1B,EIcc,EAAiB,AJdFD,KAA7B,SIcc;ADPVyG,ACFF,ACVF,ALMA3G,ACC0B,GGTD,CAAzB,ECEMuI,EJOM5H,EDDJP,KAAR,ACC0B,CEKV,AHNF,MAAMD,GKNK,CACvB,ALKF,IAA4BD,KAA5B,mDCCsB,EAAI;AEGxB,AEREoJ,ALKL,GGN0B,EAavB,qCEbA;AFcE3F,ACQJ,ACpBI4F,AJIsB,MGgBpBf,GDRG,EEZE,CACL,CFUJ,CEVM5F,IAAI,CAAN,EAAS4G,CDmBO,iBCnBW,CAA3B,EAA8BC,IDmBDlB,CCnBM,GAAnC,EAAwCmB,MAAM,GAA9C,CDmBgB,CAAtB,ACpBW,EACgD;ACL7D,AHiBM/C,AEXE,ALID,MKJG/D,GLIMvD,CKJF,CAAN,EAASmK,GFWC,MHPX,CAAuBnJ,QKJK,CAA3B,ALID,EKJ+BoJ,ALIGnJ,GAAlC,EKJoC,ALIG,IKJtC,EAAyCoJ,MAAM,GAA/C,EAFK,EAEiD;AFS1D,ACWF,ACnBM,ALIN,ACFE,GEPuB,CAAzB,ECwBMT,ACnBErG,GLID,ACFAjC,CIFK,CAAN,EAAS6I,GJEb,GAAe5I,EGiBI,CAAC,IHjBEC,KIFS,CAA3B,AJEW,CAAcJ,CIFKgJ,GDmBf,EAAkB,ACnBE,IAAnC,EAAyCC,EJE9B,EAA8B/I,CGiB1B,CCnBgC,CDmBD,ECnB9C,EAHK,AJKM,CAAf,CIF0D,MDmBvC,CAArB;AExBF,ADMQ,ALIJJ,AEbJ,IAAME,EGSImC,GCNDiH,ANUArK,CKJK,CAAN,EAASgK,CLIH/J,KAAL,CAAWa,CEbG,EIGvB,CAAwBgI,ENUEjI,EMV1B,EAA8B,CDMK,CAA3B,EAA8BoJ,CLI7B,CADA,GKHkC,IAAnC,EAAyCC,MAAM,GAA/C,CAAqD;ACL3D,AHkBA,ACOA,ACpBM,ALKJlJ,ACFA,ACXF,KGIW,CCDPY,AHkBEoH,ACOAU,AC1BJ,GLWK1J,ACFAsB,IKRIgJ,CNUCrK,ACFV,ACXU,GDWG,EDER,CAAWa,EGQI,ECOE,CEzBpB,AF0BF,CJhBsBD,GMVGe,AJJN,MFcd,CMV2B0I,UHkBCvB,EGlBR,CAAoBwB,IFyBvB,EAEtB,CE3BF,EACE3I,IHiBoB,CAAtB,EGjBS0I,YAAP,CAAoBC,OAApB,iHFwBsB,CAAxB;AEvBA3I,AHiBAoH,AEZImB,ALCG,ACCH5I,ACXJ,GFUA,MMNO+I,KLOK,EEUEpG,AEZE,AJCD,CIAT,ICNN,AJHE,GIGoB4E,IHiBtB,EGjBA,CHiB6B5E,YAA7B,8CDvBqB;AIOtB,AF2BC8E,ACrBQ5F,ALGT,ACFK5B,ACVJ,UGSY,CADN,KDsBQmI,EHpBE,MGoBhB,EF9BwB,CE8BC,wBAAaD,eAAb,CAAzB;ADTA,ACUAV,ACrBQ7F,AJFO,ACPb,KDOA,CEaI8F,IDnBF,EGQU,IDqBAW,KAAd,ECvBM,CDuBgB,CDVG,CAAC,aAAD,EAAgB,OCUNH,IDVV,EAA6B,MCUhC,CAAtB,aDVyB,CAAzB,gBDrBwB;AIK1BnH,ADMU8H,ALGH,AEXH,SIEK7H,ANSOzC,CEVV,KGOa,OCNnB,ANSO,CMTgB,ANSOe,SAAvB,EAAkCG,GMTzC,ANSO,EMTgCgG,ANSOjG,GAAvC,EAA4C,EMTnD,GAAiD,YAAM,iCJL7B;AIMxBsJ,AHiBA,ACUA,ACzBM,ALON,ACFE,ACRA,KGEc,CFgBVrG,ACUAmF,CCpBA,ELECnI,ACFAS,CCPH,KFSSZ,EGQI,KCUK,EAAtB,AJlBO,CCFL,EDEuBE,CCFCK,EDE1B,KCFiCC,GEUH2H,GFVJ,CACtB,UESwC9E,YAA3B,EAAyC8E,cAAc7E,GAAvD,CAAjB,QDvBwB;AIOzB,AHiBC6E,AEVQ5F,ALET,ACDO1B,ACRJ,CIFJ,SDSc,AHNR,CGKE,GJEQ,EESAoD,UAAd,GAA2Bd,SAASkF,aAAT,CACzB,wBAAaD,gBAAb,CADyB,CAA3B;ACWA,AHrBI,ACdoB,GAJH,EDiBK,EAItB,EGkBG,GHlBE9H,CGkBEiI,MHlBP,CGkBG,AHlBU3H,CGkBEuH,aAAZ,EAA2BG,AHtBR,CAAxB,YGsBK,CAAP;AE1BF7G,AHmBE,ACQD,ACpBSa,AJGP,ACTD,MCkBMgG,GGnBC5G,GDOO,UCPhB,AHmBwB,CGnBD,ADIf,AHHe,CCkBrB,YDhCqB,CIavB,EAAuCyE,OAAvC,GAAiD,YAAM;AACrDqD,ADOQD,AHNR,eGMiB,WHNO,uBAfH;AIetB,AHmBC,AEjBM,AHDN,CIHF,IDFkB,EAYV,EFWC,IAAIrG,KCQE+E,AF1BG,ECkBT,CAAYE,aAAZ,EAA2BG,aAA3B,CAAP;AACD,AEXS/F,AHxBa,CAAvB,SGwBc,CADN;ACNRd,SAASC,aAAT,CAAuB,QLQV,CAAE,KKRf,EAAuCyE,OAAvC,GAAiD,YAAM;AACrDqD,ADQQlH,IHPGY,QGOG,MFWD+E,IDlBF/E,CGIL;ACJP,ADQSqG,CCVV,cDUmB;AAJX,KAZU,EAkBV,EAAEhH,IAAI,CAAN,EAASD,MAAM,SJFVxB,GIEL,EAA6ByI,KJFd,IIEuB,WAAtC,EAlBU,EAmBV,EAAEhH,IAAI,CAAN,EAASD,MAAM,YAAf,EAA6BiH,SAAS,WAAtC,EAnBU,EAoBV,EAAEhH,IAAI,CAAN,EAASD,MAAM,YAAf,EAA6BiH,SAAS,0BAAtC,EApBU,EAqBV;AACEhH,AJLNxB,ACRF,UGaY,CADN,EJJGC,KAAP,CAAa,ACRHI,KDQQd,ECRpB,EAAmC,GDQpB,CAAa,iBAAb,CAAb;AIMMgC,AHd2B,QAAdhC,IGcP,GHdqB,QGY7B,+DHZyB,EAAI;AGe3BiJ,AJLN,eIKe;AAHX,AJDJ,ACXiC,KGTnB,EA0BV,GJNEtI,iBAAiBC,KAAKC,SAAL,CAAe;AIOhCoB,AJNJnB,UIMQ,CADN,MJLO,KAAKA,OADsB;AIQhCkB,AJNJhC,ACb+B,YGmBrB,KJND,KAAKA,CIIZ,MJNkC,qFCNhCC,OAAOC,MAAP,CAAcJ,cAAd,E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","file":"src.9dca9499.map","sourceRoot":"../src","sourcesContent":["export function randomChoice(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\nexport function setVendorStyle(element, property, value) {\n  const prop = capitalize(property);\n  element.style[\"webkit\" + prop] = value;\n  element.style[\"moz\" + prop] = value;\n  element.style[\"ms\" + prop] = value;\n  element.style[\"o\" + prop] = value;\n}\n\nexport function indexToRowCol(numOfCols, idx) {\n  return {\n    col: Math.floor(idx % numOfCols),\n    row: Math.floor(idx / numOfCols)\n  };\n}\n\nexport function rowColToIndex(numOfCols, row, col) {\n  return row * numOfCols + col;\n}\n","const defaultOptions = {\n  \"str-answer-label\": \"Vastauksesi:\",\n  \"str-check-answer\": \"Tarkista\",\n  \"str-send-answer\": \"Lähetä\",\n  \"str-answer-sent\": \"Vastaus lähetetty!\",\n  \"str-select\": \"Valitse\",\n  \"str-erase\": \"Poista\"\n};\n\nexport class BasePuzzle {\n  /**\n   * @param {object} options\n   */\n\n  constructor(options = {}) {\n    this.options = Object.assign(defaultOptions, options);\n\n    this.state = {\n      answer: \"\",\n      answerSent: false\n    };\n\n    this.elementSelectors = Object.assign(\n      {\n        parent: \"#puzzle\"\n      },\n      this.options.elementSelectors\n    );\n  }\n\n  onSubmit() {}\n\n  sendAnswer(callback) {\n    window.alert(this.options[\"str-answer-sent\"]);\n\n    // TODO: Actually send \"completeAnswer\" to server\n    const completeAnswer = JSON.stringify({\n      setting: this.setting,\n      options: this.options,\n      answer: this.state.answer\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(\"Complete answer:\", completeAnswer);\n\n    this.setState({ answerSent: true }, callback);\n  }\n\n  setup() {\n    this.parentEl = document.querySelector(this.elementSelectors.parent);\n    this.renderHTML();\n  }\n\n  renderInner(el, inner) {\n    if (inner instanceof HTMLElement || inner instanceof Text) {\n      el.appendChild(inner);\n    } else if (inner instanceof Array) {\n      inner.forEach(i => {\n        this.renderInner(el, i);\n      });\n    } else {\n      el.innerText = inner || \"\";\n    }\n  }\n\n  renderElement(type, id, inner, parent = this.parentEl) {\n    const newEl = document.createElement(type);\n    newEl.id = id;\n\n    this.renderInner(newEl, inner);\n\n    const oldEl = document.querySelector(`#${id}`);\n    if (oldEl) oldEl.parentNode.removeChild(oldEl);\n\n    if (parent) {\n      parent.appendChild(newEl);\n    }\n\n    return newEl;\n  }\n\n  renderHTML() {\n    this.parentEl.innerHTML = \"\";\n    this.renderElement(\"h1\", \"puzzleName\", this.options[\"str-name\"]);\n  }\n\n  setState(newState, callback) {\n    const oldState = this.state;\n    this.state = Object.assign({}, oldState, newState);\n    if (typeof callback === \"function\") callback();\n    else this.updateView();\n  }\n\n  updateView() {}\n}\n","import { BasePuzzle } from \"./BasePuzzle\";\nimport { setVendorStyle } from \"../lib/util\";\n\nimport \"./Puzzle1.css\";\n\nconst defaultOptions = {\n  \"str-name\": \"Salakirjoitus\",\n  \"str-description\":\n    \"Majavat lähettävät tietoa erityistä salakirjoitusavainta käyttäen.\",\n  \"str-key-descriptions\": {\n    \"+1\":\n      \"Jokainen kirjain vaihdetaan aakkosissa yksi askel eteenpäin olevaan kirjaimeen.\",\n    \"+2\":\n      \"Jokainen kirjain vaihdetaan aakkosissa kaksi askelta eteenpäin olevaan kirjaimeen.\",\n    \"-1\":\n      \"Jokainen kirjain vaihdetaan aakkosissa yksi askel taaksepäin olevaan kirjaimeen.\",\n    \"-2\":\n      \"Jokainen kirjain vaihdetaan aakkosissa kaksi askelta taaksepäin olevaan kirjaimeen.\"\n  },\n  \"str-example-label\": \"Siis esim..\",\n  \"str-ciphertext-label\": \"Vastaanotettu viesti:\",\n  \"str-question\": \"Mikä oli viesti?\"\n};\n\nexport class Puzzle1 extends BasePuzzle {\n  constructor(setting, options = {}) {\n    /**\n     * @param {object} setting\n     * @param {object} options\n     */\n    super(Object.assign(defaultOptions, options));\n\n    this.setting = setting;\n    this.cipherer = new Cipherer(this.setting.characterSet, this.setting.key);\n\n    this.state = Object.assign(this.state, {\n      answerCheck: [],\n      currentCharIdx: 0,\n      ringRotation: 0,\n      selectedCharIdx: 0,\n      submitted: false\n    });\n\n    this.setup();\n  }\n\n  setup() {\n    super.setup();\n    document.onkeydown = this.onKeyPress.bind(this);\n  }\n\n  cleanUp() {\n    document.onkeydown = null;\n  }\n\n  onSubmit() {\n    if (!this.canSubmit()) return;\n    const { answer } = this.state;\n    const { cipherText } = this.setting;\n    const answerCheck = this.cipherer.checkMessage(cipherText, answer);\n    this.setState({ answerCheck, submitted: true });\n  }\n\n  onSendAnswer() {\n    if (!this.canSend()) return;\n    this.sendAnswer();\n  }\n\n  onPrev() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation -= 1;\n\n    if (selectedCharIdx <= 0) {\n      selectedCharIdx = characterSet.length - 1;\n    } else {\n      selectedCharIdx -= 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onNext() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation += 1;\n\n    if (selectedCharIdx >= characterSet.length - 1) {\n      selectedCharIdx = 0;\n    } else {\n      selectedCharIdx += 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onErase() {\n    if (!this.canErase()) return;\n\n    let { answer, currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    answer = answer.slice(0, -1);\n    currentCharIdx -= 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx -= 1;\n      answer = answer.slice(0, -1);\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onSelect() {\n    if (!this.canSelect()) return;\n\n    const { selectedCharIdx } = this.state;\n    let { currentCharIdx, answer } = this.state;\n    const { characterSet, cipherText } = this.setting;\n\n    answer += characterSet[selectedCharIdx];\n    currentCharIdx += 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx += 1;\n      answer += \" \";\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onKeyPress(e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.onPrev();\n        break;\n\n      case \"ArrowRight\":\n        this.onNext();\n        break;\n\n      case \"Enter\":\n        this.onSelect();\n        break;\n\n      case \"Backspace\":\n        this.onErase();\n        break;\n\n      default:\n        return; // exit this handler for other keys\n    }\n\n    e.preventDefault(); // prevent the default action (scroll / move caret)\n  }\n\n  canSelect() {\n    const { answer, submitted } = this.state;\n    const { cipherText } = this.setting;\n\n    return !submitted && answer.length < cipherText.length;\n  }\n\n  canErase() {\n    const { answer, currentCharIdx, submitted } = this.state;\n    return !submitted && answer.length > 0 && currentCharIdx > 0;\n  }\n\n  canSubmit() {\n    const { answer, submitted } = this.state;\n    return !submitted && answer.length > 0;\n  }\n\n  canSend() {\n    const { answerSent, submitted } = this.state;\n    return submitted && !answerSent;\n  }\n\n  updateView() {\n    super.updateView();\n\n    this.updateAnswer();\n    this.updateButtons();\n    this.updateQuestion();\n    this.updateRing();\n  }\n\n  updateRing() {\n    const { ringRotation, selectedCharIdx } = this.state;\n    const rotation = this.getRingRotation(ringRotation);\n\n    // Update rotation\n    const el = document.querySelector(\"#puzzleRing #characters\");\n    setVendorStyle(el, \"transform\", `rotateY(${-rotation}deg)`);\n\n    // Update selected class\n    // Use setTimeout so the class is set somewhat in sync with the animation\n    setTimeout(() => {\n      document\n        .querySelectorAll(\"#puzzleRing #characters .characterSet\")\n        .forEach((c, idx) => {\n          if (idx === selectedCharIdx) c.classList.add(\"current-char\");\n          else c.classList.remove(\"current-char\");\n        });\n    }, 60);\n  }\n\n  updateQuestion() {\n    const el = document.querySelector(\"#puzzleQuestion\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderQuestion());\n  }\n\n  updateAnswer() {\n    const el = document.querySelector(\"#puzzleAnswer\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderAnswer());\n  }\n\n  updateButtons() {\n    this.eraseButton.disabled = !this.canErase();\n    this.selectButton.disabled = !this.canSelect();\n    this.submitButton.disabled = !this.canSubmit();\n    this.sendAnswerButton.disabled = !this.canSend();\n  }\n\n  renderHTML() {\n    super.renderHTML();\n\n    this.renderElement(\"p\", \"puzzleDescription\", this.renderDescription());\n    this.renderElement(\"p\", \"puzzleQuestion\", this.renderQuestion());\n    this.renderElement(\"div\", \"puzzleRing\", this.renderCipherRing());\n    this.renderElement(\"p\", \"puzzleAnswer\", this.renderAnswer());\n\n    // \"Tarkista\"-button\n    this.submitButton = this.renderElement(\n      \"button\",\n      \"puzzleSubmit\",\n      this.options[\"str-check-answer\"]\n    );\n    this.submitButton.onclick = this.onSubmit.bind(this);\n    this.submitButton.disabled = true;\n\n    // \"Lähetä\"-button\n    this.sendAnswerButton = this.renderElement(\n      \"button\",\n      \"puzzleSend\",\n      this.options[\"str-send-answer\"]\n    );\n    this.sendAnswerButton.onclick = this.onSendAnswer.bind(this);\n    this.sendAnswerButton.disabled = true;\n\n    this.updateView();\n  }\n\n  renderDescription() {\n    const { key, keyExample } = this.setting;\n    return [\n      document.createTextNode(this.options[\"str-description\"]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.options[\"str-key-descriptions\"][key]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.options[\"str-example-label\"]),\n      document.createTextNode(\" \"),\n      document.createTextNode(keyExample)\n    ];\n  }\n\n  renderQuestion() {\n    const { currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    const labelText = document.createTextNode(\n      this.options[\"str-ciphertext-label\"]\n    );\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = cipherText.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(\"cipher-char\");\n      if (idx === currentCharIdx) el.classList.add(\"current-char\");\n      el.innerText = c;\n      return el;\n    });\n\n    const questionEl = document.createElement(\"strong\");\n    questionEl.innerText = this.options[\"str-question\"];\n\n    return [label, chars, document.createElement(\"br\"), questionEl];\n  }\n\n  renderAnswer() {\n    const { answer, answerCheck, submitted } = this.state;\n\n    const labelText = document.createTextNode(this.options[\"str-answer-label\"]);\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = answer.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(answerCheck[idx] ? \"correct\" : \"incorrect\");\n      el.innerText = c;\n      return el;\n    });\n\n    const answerText = document.createTextNode(answer);\n\n    return submitted ? [label, chars] : [label, answerText];\n  }\n\n  renderCipherRing() {\n    const { characterSet } = this.setting;\n\n    const radius = 300;\n\n    const chars = characterSet.split(\"\").map((c, idx) => {\n      const rotation = this.getRingRotation(idx);\n      const el = document.createElement(\"li\");\n      el.classList.add(\"characterSet\");\n      el.innerText = c;\n      setVendorStyle(\n        el,\n        \"transform\",\n        `rotateY(${rotation}deg) translateZ(${radius}px)`\n      );\n      return el;\n    });\n\n    const ring = this.renderElement(\"ul\", \"characters\", chars, null);\n\n    const ringWrapper = this.renderElement(\"div\", \"ringWrapper\", ring, null);\n\n    const eraseButton = this.renderElement(\n      \"button\",\n      \"eraseButton\",\n      this.options[\"str-erase\"],\n      null\n    );\n    const prevButton = this.renderElement(\"button\", \"prevButton\", \"<<<\", null);\n    const nextButton = this.renderElement(\"button\", \"nextButton\", \">>>\", null);\n    const selectButton = this.renderElement(\n      \"button\",\n      \"selectButton\",\n      this.options[\"str-select\"],\n      null\n    );\n\n    eraseButton.disabled = true;\n\n    eraseButton.onclick = this.onErase.bind(this);\n    prevButton.onclick = this.onPrev.bind(this);\n    nextButton.onclick = this.onNext.bind(this);\n    selectButton.onclick = this.onSelect.bind(this);\n\n    const controls = this.renderElement(\"div\", \"controls\", [\n      eraseButton,\n      prevButton,\n      nextButton,\n      selectButton\n    ]);\n\n    this.eraseButton = eraseButton;\n    this.selectButton = selectButton;\n\n    return [ringWrapper, controls];\n  }\n\n  getRingRotation(index) {\n    return index * (360 / this.setting.characterSet.length);\n  }\n}\n\nexport class Cipherer {\n  constructor(characterSet, key) {\n    const keys = /([+-])(\\d+)/g.exec(key);\n    this.factor = keys[1] === \"-\" ? -parseInt(keys[2]) : parseInt(keys[2]);\n    this.characterSet = characterSet;\n  }\n\n  cipherChar(c) {\n    if (this.characterSet.indexOf(c) === -1) return c;\n    let idx = this.characterSet.indexOf(c) + this.factor;\n    if (idx < 0) idx += this.characterSet.length;\n    else if (idx > this.characterSet.length - 1)\n      idx -= this.characterSet.length;\n    return this.characterSet[idx];\n  }\n\n  cipherMessage(m) {\n    if (typeof m === \"string\") {\n      return m\n        .toUpperCase()\n        .split(\"\")\n        .map(this.cipherChar.bind(this))\n        .join(\"\");\n    }\n  }\n\n  checkCharacter(cipherChar, charToCheck) {\n    return (\n      cipherChar && charToCheck && cipherChar === this.cipherChar(charToCheck)\n    );\n  }\n\n  checkMessage(cipherText, message) {\n    return message\n      .toUpperCase()\n      .split(\"\")\n      .map((c, idx) => this.checkCharacter(cipherText[idx], c));\n  }\n}\n\nwindow.Puzzle1 = Puzzle1;\n","import { randomChoice } from \"./lib/util\";\nimport { Cipherer } from \"./puzzles/Puzzle1\";\n\nconst Puzzle1 = window.Puzzle1;\n\nfunction init() {\n  const characterSet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZÅÄÖ\";\n\n  const possibleSettings = [\n    {\n      key: \"+1\",\n      keyExample: \"A → B, B → C..., Ä → Ö, Ö → A\"\n    },\n    {\n      key: \"+2\",\n      keyExample: \"A → C, B → D..., Ä → A, Ö → B\"\n    },\n    {\n      key: \"-1\",\n      keyExample: \"A → Ö, B → A..., Ä → Å, Ö → Ä\"\n    },\n    {\n      key: \"-2\",\n      keyExample: \"A → Ä, B → Ö..., Ä → Z, Ö → Å\"\n    }\n  ];\n\n  const puzzleSetting = randomChoice(possibleSettings);\n  puzzleSetting.characterSet = characterSet;\n\n  const possibleMessages = [\"HEI MAAILMA\", \"JS ROKKAA\", \"YLIOPISTO ON PARAS\"];\n\n  const cipherer = new Cipherer(puzzleSetting.characterSet, puzzleSetting.key);\n  puzzleSetting.cipherText = cipherer.cipherMessage(\n    randomChoice(possibleMessages)\n  );\n\n  const puzzleOptions = {};\n\n  return new Puzzle1(puzzleSetting, puzzleOptions);\n}\n\nexport default init;\n","import { randomChoice } from \"./lib/util\";\n\nconst Puzzle2 = window.Puzzle2;\n\nfunction init() {\n  const possibleSettings = [\n    {\n      rows: 10,\n      cols: 10,\n      objects: [\n        [1, 1, \"lake\"],\n        [2, 5, \"mushroom\"],\n        [3, 9, \"tree\"],\n        [9, 6, \"treestump\"]\n      ],\n      examples: [\"Järvi (1, 1)\", \"Sieni (2, 5)\"]\n    },\n    {\n      rows: 10,\n      cols: 10,\n      objects: [\n        [4, 2, \"lake\"],\n        [3, 5, \"mushroom\"],\n        [2, 9, \"tree\"],\n        [9, 6, \"treestump\"]\n      ],\n      examples: [\"Järvi (4, 2)\", \"Sieni (3, 5)\"]\n    }\n  ];\n\n  const puzzleSetting = randomChoice(possibleSettings);\n\n  const puzzleInputs = [\"text-or-mouse\", \"text-only\", \"mouse-only\"];\n\n  const puzzleQuestions = [\n    \"Missä puunkanto sijaitsee?\",\n    \"Majavan talo sijaitsee neljä askelta sienen alapuolella ja siitä kaksi askelta oikealle. Missä rivissä ja sarakkeessa Majavan talo sijaitsee?\"\n  ];\n\n  puzzleSetting.question = randomChoice(puzzleQuestions);\n  puzzleSetting.input = randomChoice(puzzleInputs);\n\n  const puzzleOptions = {};\n\n  return new Puzzle2(puzzleSetting, puzzleOptions);\n}\n\nexport default init;\n","import { randomChoice } from \"./lib/util\";\n\nimport finlandImg from \"./static/finland-23572_1280.png\";\n\nconst Puzzle3 = window.Puzzle3;\n\nfunction init() {\n  const possibleSettings = [\n    {\n      backgroundUrl: finlandImg,\n      slots: [\n        { id: 1, correctDraggable: 1, top: 620, left: 390 }, // Oulu\n        { id: 2, correctDraggable: 2, top: 1070, left: 280 }, // Tampere\n        { id: 3, correctDraggable: 3, top: 1230, left: 340 }, // Helsinki\n        { id: 4, correctDraggable: 4, top: 1190, left: 160 } // Turku\n      ],\n      draggables: [\n        {\n          id: 1,\n          type: \"image/png\",\n          content: \"https://picsum.photos/200/100/?random\"\n        },\n        {\n          id: 2,\n\n          type: \"image/png\",\n          content: \"https://picsum.photos/300/200/?random\"\n        },\n        {\n          id: 3,\n\n          type: \"image/png\",\n          content: \"https://picsum.photos/100/100/?random\"\n        },\n        { id: 4, type: \"text/plain\", content: \"Drag me 1\" },\n        { id: 5, type: \"text/plain\", content: \"Drag me 2\" },\n        { id: 6, type: \"text/plain\", content: \"Drag me 3 very long text\" },\n        {\n          id: 7,\n          type: \"video/ogg\",\n          content: \"http://clips.vorwaerts-gmbh.de/big_buck_bunny.ogv\"\n        },\n        {\n          id: 8,\n          type: \"audio/mp3\",\n          content: \"https://html5tutorial.info/media/vincent.mp3\"\n        }\n      ]\n    }\n  ];\n\n  const puzzleSetting = randomChoice(possibleSettings);\n\n  return new Puzzle3(puzzleSetting);\n}\n\nexport default init;\n","import \"./index.css\";\n\nimport initPuzzle1 from \"./initPuzzle1\";\nimport initPuzzle2 from \"./initPuzzle2\";\nimport initPuzzle3 from \"./initPuzzle3\";\n\n// window.activePuzzle = initPuzzle3();\n\nfunction activatePuzzle(init) {\n  if (window.activePuzzle && window.activePuzzle.cleanUp)\n    window.activePuzzle.cleanUp();\n  window.activePuzzle = init();\n}\n\ndocument.querySelector(\"#initPuzzle1\").onclick = () => {\n  activatePuzzle(initPuzzle1);\n};\n\ndocument.querySelector(\"#initPuzzle2\").onclick = () => {\n  activatePuzzle(initPuzzle2);\n};\n\ndocument.querySelector(\"#initPuzzle3\").onclick = () => {\n  activatePuzzle(initPuzzle3);\n};\n"]}