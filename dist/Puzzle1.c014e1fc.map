{"version":3,"sources":["puzzles/BasePuzzle.js","lib/util.js","puzzles/Puzzle1.js"],"names":["BasePuzzle","data","setting","locale","state","answer","answerSent","callback","window","alert","general","completeAnswer","JSON","stringify","console","log","setState","parentEl","document","querySelector","renderHTML","el","inner","HTMLElement","Text","appendChild","Array","forEach","renderInner","i","innerText","type","id","parent","newEl","createElement","oldEl","parentNode","removeChild","innerHTML","renderElement","specific","newState","oldState","Object","assign","updateView","randomChoice","capitalize","setVendorStyle","indexToRowCol","rowColToIndex","arr","Math","floor","random","length","str","charAt","toUpperCase","substr","element","property","value","prop","style","numOfCols","idx","col","row","Puzzle1","cipherer","Cipherer","characterSet","key","factor","answerCheck","currentCharIdx","ringRotation","selectedCharIdx","submitted","setup","onkeydown","onKeyPress","bind","canSubmit","cipherText","checkMessage","canSend","sendAnswer","canErase","slice","canSelect","e","onPrev","onNext","onSelect","onErase","preventDefault","updateAnswer","updateButtons","updateQuestion","updateRing","rotation","getRingRotation","setTimeout","querySelectorAll","c","classList","add","remove","renderQuestion","renderAnswer","eraseButton","disabled","selectButton","submitButton","sendAnswerButton","renderDescription","renderCipherRing","onclick","onSubmit","onSendAnswer","createTextNode","renderExample","labelText","label","chars","split","map","questionEl","cs","len","rotatingIndex","join","answerText","radius","ring","ringWrapper","prevButton","nextButton","controls","index","keys","exec","parseInt","indexOf","m","cipherChar","charToCheck","message","checkCharacter","arrayLen"],"mappings":"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","file":"Puzzle1.c014e1fc.map","sourceRoot":"../src","sourcesContent":["export class BasePuzzle {\n  /**\n   * @param {object} data\n   */\n\n  constructor(data) {\n    this.setting = data.setting;\n    this.locale = data.locale;\n\n    this.state = {\n      answer: \"\",\n      answerSent: false\n    };\n  }\n\n  onSubmit() {}\n\n  sendAnswer(callback) {\n    window.alert(this.locale.general[\"str-answer-sent\"]);\n\n    // TODO: Actually send \"completeAnswer\" to server\n    const completeAnswer = JSON.stringify({\n      setting: this.setting,\n      locale: this.locale,\n      answer: this.state.answer\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(\"Complete answer:\", completeAnswer);\n\n    this.setState({ answerSent: true }, callback);\n  }\n\n  setup() {\n    this.parentEl = document.querySelector(\"#puzzle\");\n    this.renderHTML();\n  }\n\n  renderInner(el, inner) {\n    if (inner instanceof HTMLElement || inner instanceof Text) {\n      el.appendChild(inner);\n    } else if (inner instanceof Array) {\n      inner.forEach(i => {\n        this.renderInner(el, i);\n      });\n    } else {\n      el.innerText = inner || \"\";\n    }\n  }\n\n  renderElement(type, id, inner, parent = this.parentEl) {\n    const newEl = document.createElement(type);\n    newEl.id = id;\n\n    this.renderInner(newEl, inner);\n\n    const oldEl = document.querySelector(`#${id}`);\n    if (oldEl) oldEl.parentNode.removeChild(oldEl);\n\n    if (parent) {\n      parent.appendChild(newEl);\n    }\n\n    return newEl;\n  }\n\n  renderHTML() {\n    this.parentEl.innerHTML = \"\";\n    this.renderElement(\"h1\", \"puzzleName\", this.locale.specific[\"str-name\"]);\n  }\n\n  setState(newState, callback) {\n    const oldState = this.state;\n    this.state = Object.assign({}, oldState, newState);\n    if (typeof callback === \"function\") callback();\n    else this.updateView();\n  }\n\n  updateView() {}\n}\n","export function randomChoice(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\nexport function setVendorStyle(element, property, value) {\n  const prop = capitalize(property);\n  element.style[\"webkit\" + prop] = value;\n  element.style[\"moz\" + prop] = value;\n  element.style[\"ms\" + prop] = value;\n  element.style[\"o\" + prop] = value;\n}\n\nexport function indexToRowCol(numOfCols, idx) {\n  return {\n    col: Math.floor(idx % numOfCols),\n    row: Math.floor(idx / numOfCols)\n  };\n}\n\nexport function rowColToIndex(numOfCols, row, col) {\n  return row * numOfCols + col;\n}\n","import { BasePuzzle } from \"./BasePuzzle\";\nimport { setVendorStyle } from \"../lib/util\";\n\nimport \"./Puzzle1.css\";\n\nexport class Puzzle1 extends BasePuzzle {\n  constructor(data) {\n    /**\n     * @param {object} data\n     */\n    super(data);\n\n    this.cipherer = new Cipherer(this.setting.characterSet, this.setting.key);\n    this.setting.key = this.cipherer.factor;\n\n    this.state = Object.assign(this.state, {\n      answerCheck: [],\n      currentCharIdx: 0,\n      ringRotation: 0,\n      selectedCharIdx: 0,\n      submitted: false\n    });\n\n    this.setup();\n  }\n\n  setup() {\n    super.setup();\n    document.onkeydown = this.onKeyPress.bind(this);\n  }\n\n  cleanUp() {\n    document.onkeydown = null;\n  }\n\n  onSubmit() {\n    if (!this.canSubmit()) return;\n    const { answer } = this.state;\n    const { cipherText } = this.setting;\n    const answerCheck = this.cipherer.checkMessage(cipherText, answer);\n    this.setState({ answerCheck, submitted: true });\n  }\n\n  onSendAnswer() {\n    if (!this.canSend()) return;\n    this.sendAnswer();\n  }\n\n  onPrev() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation -= 1;\n\n    if (selectedCharIdx <= 0) {\n      selectedCharIdx = characterSet.length - 1;\n    } else {\n      selectedCharIdx -= 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onNext() {\n    let { ringRotation, selectedCharIdx } = this.state;\n    const { characterSet } = this.setting;\n\n    ringRotation += 1;\n\n    if (selectedCharIdx >= characterSet.length - 1) {\n      selectedCharIdx = 0;\n    } else {\n      selectedCharIdx += 1;\n    }\n\n    this.setState({ ringRotation, selectedCharIdx });\n  }\n\n  onErase() {\n    if (!this.canErase()) return;\n\n    let { answer, currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    answer = answer.slice(0, -1);\n    currentCharIdx -= 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx -= 1;\n      answer = answer.slice(0, -1);\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onSelect() {\n    if (!this.canSelect()) return;\n\n    const { selectedCharIdx } = this.state;\n    let { currentCharIdx, answer } = this.state;\n    const { characterSet, cipherText } = this.setting;\n\n    answer += characterSet[selectedCharIdx];\n    currentCharIdx += 1;\n    while (cipherText[currentCharIdx] === \" \") {\n      currentCharIdx += 1;\n      answer += \" \";\n    }\n\n    this.setState({ answer, currentCharIdx });\n  }\n\n  onKeyPress(e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.onPrev();\n        break;\n\n      case \"ArrowRight\":\n        this.onNext();\n        break;\n\n      case \"Enter\":\n        this.onSelect();\n        break;\n\n      case \"Backspace\":\n        this.onErase();\n        break;\n\n      default:\n        return; // exit this handler for other keys\n    }\n\n    e.preventDefault(); // prevent the default action (scroll / move caret)\n  }\n\n  canSelect() {\n    const { answer, submitted } = this.state;\n    const { cipherText } = this.setting;\n\n    return !submitted && answer.length < cipherText.length;\n  }\n\n  canErase() {\n    const { answer, currentCharIdx, submitted } = this.state;\n    return !submitted && answer.length > 0 && currentCharIdx > 0;\n  }\n\n  canSubmit() {\n    const { answer, submitted } = this.state;\n    return !submitted && answer.length > 0;\n  }\n\n  canSend() {\n    const { answerSent, submitted } = this.state;\n    return submitted && !answerSent;\n  }\n\n  updateView() {\n    super.updateView();\n\n    this.updateAnswer();\n    this.updateButtons();\n    this.updateQuestion();\n    this.updateRing();\n  }\n\n  updateRing() {\n    const { ringRotation, selectedCharIdx } = this.state;\n    const rotation = this.getRingRotation(ringRotation);\n\n    // Update rotation\n    const el = document.querySelector(\"#puzzleRing #characters\");\n    setVendorStyle(el, \"transform\", `rotateY(${-rotation}deg)`);\n\n    // Update selected class\n    // Use setTimeout so the class is set somewhat in sync with the animation\n    setTimeout(() => {\n      document\n        .querySelectorAll(\"#puzzleRing #characters .characterSet\")\n        .forEach((c, idx) => {\n          if (idx === selectedCharIdx) c.classList.add(\"current-char\");\n          else c.classList.remove(\"current-char\");\n        });\n    }, 60);\n  }\n\n  updateQuestion() {\n    const el = document.querySelector(\"#puzzleQuestion\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderQuestion());\n  }\n\n  updateAnswer() {\n    const el = document.querySelector(\"#puzzleAnswer\");\n    el.innerHTML = \"\"; // Clear old content\n    this.renderInner(el, this.renderAnswer());\n  }\n\n  updateButtons() {\n    this.eraseButton.disabled = !this.canErase();\n    this.selectButton.disabled = !this.canSelect();\n    this.submitButton.disabled = !this.canSubmit();\n    this.sendAnswerButton.disabled = !this.canSend();\n  }\n\n  renderHTML() {\n    super.renderHTML();\n\n    this.renderElement(\"p\", \"puzzleDescription\", this.renderDescription());\n    this.renderElement(\"p\", \"puzzleQuestion\", this.renderQuestion());\n    this.renderElement(\"div\", \"puzzleRing\", this.renderCipherRing());\n    this.renderElement(\"p\", \"puzzleAnswer\", this.renderAnswer());\n\n    // \"Tarkista\"-button\n    this.submitButton = this.renderElement(\n      \"button\",\n      \"puzzleSubmit\",\n      this.locale.general[\"str-check-answer\"]\n    );\n    this.submitButton.onclick = this.onSubmit.bind(this);\n    this.submitButton.disabled = true;\n\n    // \"Lähetä\"-button\n    this.sendAnswerButton = this.renderElement(\n      \"button\",\n      \"puzzleSend\",\n      this.locale.general[\"str-send-answer\"]\n    );\n    this.sendAnswerButton.onclick = this.onSendAnswer.bind(this);\n    this.sendAnswerButton.disabled = true;\n\n    this.updateView();\n  }\n\n  renderDescription() {\n    return [\n      document.createTextNode(this.locale.specific[\"str-description\"]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.locale.specific[\"str-key-description\"]),\n      document.createElement(\"br\"),\n      document.createTextNode(this.locale.specific[\"str-example-label\"]),\n      document.createTextNode(\" \"),\n      document.createTextNode(this.renderExample())\n    ];\n  }\n\n  renderQuestion() {\n    const { currentCharIdx } = this.state;\n    const { cipherText } = this.setting;\n\n    const labelText = document.createTextNode(\n      this.locale.specific[\"str-ciphertext-label\"]\n    );\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = cipherText.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(\"cipher-char\");\n      if (idx === currentCharIdx) el.classList.add(\"current-char\");\n      el.innerText = c;\n      return el;\n    });\n\n    const questionEl = document.createElement(\"strong\");\n    questionEl.innerText = this.locale.specific[\"str-question\"];\n\n    return [label, chars, document.createElement(\"br\"), questionEl];\n  }\n\n  renderExample() {\n    const { key, characterSet: cs } = this.setting;\n    const len = cs.length;\n    return [0, 1, len - 2, len - 1]\n      .map(\n        i => `${cs[rotatingIndex(len, i)]} → ${cs[rotatingIndex(len, i + key)]}`\n      )\n      .join(\",\");\n  }\n\n  renderAnswer() {\n    const { answer, answerCheck, submitted } = this.state;\n\n    const labelText = document.createTextNode(\n      this.locale.general[\"str-answer-label\"]\n    );\n\n    const label = [labelText, document.createTextNode(\" \")];\n\n    const chars = answer.split(\"\").map((c, idx) => {\n      const el = document.createElement(\"span\");\n      el.classList.add(answerCheck[idx] ? \"correct\" : \"incorrect\");\n      el.innerText = c;\n      return el;\n    });\n\n    const answerText = document.createTextNode(answer);\n\n    return submitted ? [label, chars] : [label, answerText];\n  }\n\n  renderCipherRing() {\n    const { characterSet } = this.setting;\n\n    const radius = 300;\n\n    const chars = characterSet.split(\"\").map((c, idx) => {\n      const rotation = this.getRingRotation(idx);\n      const el = document.createElement(\"li\");\n      el.classList.add(\"characterSet\");\n      el.innerText = c;\n      setVendorStyle(\n        el,\n        \"transform\",\n        `rotateY(${rotation}deg) translateZ(${radius}px)`\n      );\n      return el;\n    });\n\n    const ring = this.renderElement(\"ul\", \"characters\", chars, null);\n\n    const ringWrapper = this.renderElement(\"div\", \"ringWrapper\", ring, null);\n\n    const eraseButton = this.renderElement(\n      \"button\",\n      \"eraseButton\",\n      this.locale.general[\"str-erase\"],\n      null\n    );\n    const prevButton = this.renderElement(\"button\", \"prevButton\", \"<<<\", null);\n    const nextButton = this.renderElement(\"button\", \"nextButton\", \">>>\", null);\n    const selectButton = this.renderElement(\n      \"button\",\n      \"selectButton\",\n      this.locale.general[\"str-select\"],\n      null\n    );\n\n    eraseButton.disabled = true;\n\n    eraseButton.onclick = this.onErase.bind(this);\n    prevButton.onclick = this.onPrev.bind(this);\n    nextButton.onclick = this.onNext.bind(this);\n    selectButton.onclick = this.onSelect.bind(this);\n\n    const controls = this.renderElement(\"div\", \"controls\", [\n      eraseButton,\n      prevButton,\n      nextButton,\n      selectButton\n    ]);\n\n    this.eraseButton = eraseButton;\n    this.selectButton = selectButton;\n\n    return [ringWrapper, controls];\n  }\n\n  getRingRotation(index) {\n    return index * (360 / this.setting.characterSet.length);\n  }\n}\n\nexport class Cipherer {\n  constructor(characterSet, key) {\n    const keys = /([+-])(\\d+)/g.exec(key);\n    this.factor = keys[1] === \"-\" ? -parseInt(keys[2]) : parseInt(keys[2]);\n    this.characterSet = characterSet;\n  }\n\n  cipherChar(c) {\n    if (this.characterSet.indexOf(c) === -1) return c;\n    const idx = rotatingIndex(\n      this.characterSet.length,\n      this.characterSet.indexOf(c) + this.factor\n    );\n    return this.characterSet[idx];\n  }\n\n  cipherMessage(m) {\n    if (typeof m === \"string\") {\n      return m\n        .toUpperCase()\n        .split(\"\")\n        .map(this.cipherChar.bind(this))\n        .join(\"\");\n    }\n  }\n\n  checkCharacter(cipherChar, charToCheck) {\n    return (\n      cipherChar && charToCheck && cipherChar === this.cipherChar(charToCheck)\n    );\n  }\n\n  checkMessage(cipherText, message) {\n    return message\n      .toUpperCase()\n      .split(\"\")\n      .map((c, idx) => this.checkCharacter(cipherText[idx], c));\n  }\n}\n\nfunction rotatingIndex(arrayLen, index) {\n  if (index >= arrayLen) return index - arrayLen;\n  if (index < 0) return index + arrayLen;\n  return index;\n}\n\nwindow.Puzzle1 = Puzzle1;\n"]}