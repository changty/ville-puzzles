{"version":3,"sources":["puzzles/BasePuzzle.js","lib/util.js","puzzles/Puzzle2.js"],"names":["defaultOptions","BasePuzzle","options","Object","assign","state","answer","answerSent","elementSelectors","parent","callback","window","alert","completeAnswer","JSON","stringify","setting","console","log","setState","parentEl","document","querySelector","renderHTML","el","inner","HTMLElement","Text","appendChild","Array","forEach","renderInner","i","innerText","type","id","newEl","createElement","oldEl","parentNode","removeChild","innerHTML","renderElement","newState","oldState","updateView","randomChoice","capitalize","setVendorStyle","indexToRowCol","rowColToIndex","arr","Math","floor","random","length","str","charAt","toUpperCase","substr","element","property","value","prop","style","numOfCols","idx","col","row","Puzzle2","bind","cols","onSpotClick","onAnswerChange","grid","rows","fill","map","_","rowCol","Spot","objects","s","objectType","setup","canSend","sendAnswer","event","spot","input","newAnswer","canEditAnswer","indexOf","target","name","updateAnswer","updateButtons","sendAnswerButton","disabled","rowInput","colInput","renderExamples","renderGrid","createTextNode","question","renderInputForm","onclick","onSendAnswer","ul","examples","text","gridElements","onClick","step","min","onchange","onkeyup","max","row_0","col_0","className","classList","add","gridColumn","gridRow","renderIndexingNumber","e","number"],"mappings":"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","file":"Puzzle2.f9164f3d.map","sourceRoot":"../src","sourcesContent":["const defaultOptions = {\n  \"str-answer-label\": \"Vastauksesi:\",\n  \"str-check-answer\": \"Tarkista\",\n  \"str-send-answer\": \"Lähetä\",\n  \"str-answer-sent\": \"Vastaus lähetetty!\",\n  \"str-select\": \"Valitse\",\n  \"str-erase\": \"Poista\"\n};\n\nexport class BasePuzzle {\n  /**\n   * @param {object} options\n   */\n\n  constructor(options = {}) {\n    this.options = Object.assign(defaultOptions, options);\n\n    this.state = {\n      answer: \"\",\n      answerSent: false\n    };\n\n    this.elementSelectors = Object.assign(\n      {\n        parent: \"#puzzle\"\n      },\n      this.options.elementSelectors\n    );\n  }\n\n  onSubmit() {}\n\n  sendAnswer(callback) {\n    window.alert(this.options[\"str-answer-sent\"]);\n\n    // TODO: Actually send \"completeAnswer\" to server\n    const completeAnswer = JSON.stringify({\n      setting: this.setting,\n      options: this.options,\n      answer: this.state.answer\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(\"Complete answer:\", completeAnswer);\n\n    this.setState({ answerSent: true }, callback);\n  }\n\n  setup() {\n    this.parentEl = document.querySelector(this.elementSelectors.parent);\n    this.renderHTML();\n  }\n\n  renderInner(el, inner) {\n    if (inner instanceof HTMLElement || inner instanceof Text) {\n      el.appendChild(inner);\n    } else if (inner instanceof Array) {\n      inner.forEach(i => {\n        this.renderInner(el, i);\n      });\n    } else {\n      el.innerText = inner || \"\";\n    }\n  }\n\n  renderElement(type, id, inner, parent = this.parentEl) {\n    const newEl = document.createElement(type);\n    newEl.id = id;\n\n    this.renderInner(newEl, inner);\n\n    const oldEl = document.querySelector(`#${id}`);\n    if (oldEl) oldEl.parentNode.removeChild(oldEl);\n\n    if (parent) {\n      parent.appendChild(newEl);\n    }\n\n    return newEl;\n  }\n\n  renderHTML() {\n    this.parentEl.innerHTML = \"\";\n    this.renderElement(\"h1\", \"puzzleName\", this.options[\"str-name\"]);\n  }\n\n  setState(newState, callback) {\n    const oldState = this.state;\n    this.state = Object.assign({}, oldState, newState);\n    if (typeof callback === \"function\") callback();\n    else this.updateView();\n  }\n\n  updateView() {}\n}\n","export function randomChoice(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\nexport function setVendorStyle(element, property, value) {\n  const prop = capitalize(property);\n  element.style[\"webkit\" + prop] = value;\n  element.style[\"moz\" + prop] = value;\n  element.style[\"ms\" + prop] = value;\n  element.style[\"o\" + prop] = value;\n}\n\nexport function indexToRowCol(numOfCols, idx) {\n  return {\n    col: Math.floor(idx % numOfCols),\n    row: Math.floor(idx / numOfCols)\n  };\n}\n\nexport function rowColToIndex(numOfCols, row, col) {\n  return row * numOfCols + col;\n}\n","import { BasePuzzle } from \"./BasePuzzle\";\nimport { rowColToIndex, indexToRowCol } from \"../lib/util\";\n\nimport \"./Puzzle2.css\";\n\nconst defaultOptions = {\n  \"str-name\": \"Majavakartta\",\n  \"str-description\":\n    \"Majavakartassa esineen paikka ilmaistaan kahdella suluissa olevalla numerolla. Ensin rivin numero ja sitten sarakkeen numero.\",\n  \"str-input-types\": {\n    \"text-or-mouse\": \"Anna vastauksesi klikkaamalla tai kirjoittamalla.\",\n    \"text-only\": \"Anna vastauksesi kirjoittamalla.\",\n    \"mouse-only\": \"Anna vastauksesi klikkaamalla.\"\n  }\n};\n\nexport class Puzzle2 extends BasePuzzle {\n  constructor(setting, options = {}) {\n    /**\n     * @param {object} options\n     */\n\n    super(Object.assign(defaultOptions, options));\n\n    this.setting = setting;\n\n    this.state = Object.assign(this.state, {\n      answer: { row: null, col: null }\n    });\n\n    this.indexToRowCol = indexToRowCol.bind(null, setting.cols);\n    this.rowColToIndex = rowColToIndex.bind(null, setting.cols);\n\n    this.onSpotClick = this.onSpotClick.bind(this);\n    this.onAnswerChange = this.onAnswerChange.bind(this);\n\n    // Init an array with empty Spot in each element\n    this.grid = Array(this.setting.rows * this.setting.cols)\n      .fill(null) // Fill with nulls so we can use map()\n      .map((_, idx) => {\n        const rowCol = this.indexToRowCol(idx);\n        return new Spot(rowCol.row, rowCol.col);\n      });\n\n    // Replace Spot objectType with received parameters\n    this.setting.objects.forEach(s => {\n      // setting indexes are 1-indexed so we need to substract 1\n      const idx = this.rowColToIndex(s[0] - 1, s[1] - 1);\n      this.grid[idx].objectType = s[2];\n    });\n\n    this.setup();\n  }\n\n  onSendAnswer() {\n    if (!this.canSend()) return;\n    this.sendAnswer();\n  }\n\n  onSpotClick(event, spot) {\n    if (this.setting.input === \"text-only\") return;\n    const { row, col } = spot;\n    this.onAnswerChange(null, { row, col });\n  }\n\n  onAnswerChange(event, newAnswer) {\n    if (!this.canEditAnswer()) return;\n    const { answer } = this.state;\n    if (event && [\"row\", \"col\"].indexOf(event.target.name) > -1) {\n      answer[event.target.name] = event.target.value;\n    }\n    this.setState({ answer: event ? answer : newAnswer });\n  }\n\n  canSend() {\n    const { answer, answerSent } = this.state;\n    return !answerSent && answer.row !== null && answer.col !== null;\n  }\n\n  canEditAnswer() {\n    const { answerSent } = this.state;\n    return !answerSent;\n  }\n\n  updateView() {\n    super.updateView();\n\n    this.updateAnswer();\n    this.updateButtons();\n  }\n\n  updateButtons() {\n    this.sendAnswerButton.disabled = !this.canSend();\n  }\n\n  updateAnswer() {\n    const { answer } = this.state;\n\n    this.rowInput.value = answer.row;\n    this.rowInput.disabled =\n      !this.canEditAnswer() || this.setting.input === \"mouse-only\";\n\n    this.colInput.value = answer.col;\n    this.colInput.disabled =\n      !this.canEditAnswer() || this.setting.input === \"mouse-only\";\n  }\n\n  renderHTML() {\n    super.renderHTML();\n\n    this.renderElement(\n      \"p\",\n      \"puzzleDescription\",\n      this.options[\"str-description\"]\n    );\n    this.renderElement(\"div\", \"puzzleExample\", this.renderExamples());\n    this.renderElement(\"div\", \"puzzleGrid\", this.renderGrid());\n    this.renderElement(\"p\", \"puzzleQuestion\", [\n      document.createTextNode(this.setting.question),\n      document.createElement(\"br\"),\n      document.createTextNode(\n        this.options[\"str-input-types\"][this.setting.input]\n      )\n    ]);\n    this.renderElement(\n      \"p\",\n      \"puzzleAnswerLabel\",\n      this.options[\"str-answer-label\"]\n    );\n    this.renderElement(\"div\", \"puzzleInput\", this.renderInputForm());\n\n    // Render \"Lähetä\"-button\n    this.sendAnswerButton = this.renderElement(\n      \"button\",\n      \"puzzleSend\",\n      this.options[\"str-send-answer\"]\n    );\n    this.sendAnswerButton.onclick = this.onSendAnswer.bind(this);\n    this.sendAnswerButton.disabled = true;\n\n    this.updateView();\n  }\n\n  renderExamples() {\n    const ul = document.createElement(\"ul\");\n    this.setting.examples.forEach(text => {\n      const el = document.createElement(\"li\");\n      el.innerText = text;\n      ul.appendChild(el);\n    });\n    return ul;\n  }\n\n  renderGrid() {\n    const gridElements = this.grid.map(spot =>\n      spot.renderHTML({\n        onClick: this.onSpotClick\n      })\n    );\n\n    return this.renderElement(\"div\", \"gridWrapper\", gridElements, null);\n  }\n\n  renderInputForm() {\n    this.rowInput = document.createElement(\"input\");\n    this.colInput = document.createElement(\"input\");\n\n    [this.rowInput, this.colInput].forEach(i => {\n      i.type = \"number\";\n      i.step = 1;\n      i.min = 1;\n      i.disabled = this.setting.input === \"mouse-only\";\n      i.onchange = this.onAnswerChange;\n      i.onkeyup = this.onAnswerChange;\n    });\n\n    this.rowInput.max = this.setting.rows;\n    this.rowInput.name = \"row\";\n    this.colInput.max = this.setting.cols;\n    this.colInput.name = \"col\";\n\n    return this.renderElement(\n      \"form\",\n      \"inputForm\",\n      [this.rowInput, this.colInput],\n      null\n    );\n  }\n}\n\nclass Spot {\n  constructor(row_0, col_0, objectType = null) {\n    /**\n     * @param {number} row_0 - 0-indexed row\n     * @param {number} col_0 - 0-indexed col\n     * @param {number} objectType\n     */\n    this.col = col_0 + 1; // Coordinate in 1-indexed system\n    this.row = row_0 + 1; // Coordinate in 1-indexed system\n    this.objectType = objectType;\n  }\n\n  renderHTML({ onClick }) {\n    const el = document.createElement(\"div\");\n    el.className = \"spot\";\n\n    if (this.objectType) el.classList.add(this.objectType);\n    else {\n      el.classList.add(\"empty\");\n      el.innerText = \"•\";\n    }\n\n    el.style.gridColumn = this.col;\n    el.style.gridRow = this.row;\n\n    if (this.row === 1)\n      el.appendChild(this.renderIndexingNumber(\"col\", this.col));\n\n    if (this.col === 1)\n      el.appendChild(this.renderIndexingNumber(\"row\", this.row));\n\n    el.onclick = e => onClick(e, this);\n    return el;\n  }\n\n  renderIndexingNumber(type, number) {\n    const el = document.createElement(\"span\");\n    el.className = \"indexingNumber\";\n    el.classList.add(type);\n    el.innerText = number;\n    return el;\n  }\n}\n\nwindow.Puzzle2 = Puzzle2;\n"]}